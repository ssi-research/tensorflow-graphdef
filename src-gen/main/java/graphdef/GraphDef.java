// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: graphdef/graph.proto

// Protobuf Java Version: 3.25.3
package graphdef;

/**
 * <pre>
 * Represents the graph of operations
 * </pre>
 *
 * Protobuf type {@code uni_model_proto.GraphDef}
 */
public final class GraphDef extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:uni_model_proto.GraphDef)
    GraphDefOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GraphDef.newBuilder() to construct.
  private GraphDef(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GraphDef() {
    node_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GraphDef();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return graphdef.GraphProtos.internal_static_uni_model_proto_GraphDef_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return graphdef.GraphProtos.internal_static_uni_model_proto_GraphDef_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            graphdef.GraphDef.class, graphdef.GraphDef.Builder.class);
  }

  private int bitField0_;
  public static final int NODE_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<graphdef.NodeDef> node_;
  /**
   * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
   */
  @java.lang.Override
  public java.util.List<graphdef.NodeDef> getNodeList() {
    return node_;
  }
  /**
   * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends graphdef.NodeDefOrBuilder> 
      getNodeOrBuilderList() {
    return node_;
  }
  /**
   * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
   */
  @java.lang.Override
  public int getNodeCount() {
    return node_.size();
  }
  /**
   * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
   */
  @java.lang.Override
  public graphdef.NodeDef getNode(int index) {
    return node_.get(index);
  }
  /**
   * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
   */
  @java.lang.Override
  public graphdef.NodeDefOrBuilder getNodeOrBuilder(
      int index) {
    return node_.get(index);
  }

  public static final int VERSIONS_FIELD_NUMBER = 4;
  private graphdef.VersionDef versions_;
  /**
   * <pre>
   * Compatibility versions of the graph.  See core/public/version.h for version
   * history.  The GraphDef version is distinct from the TensorFlow version, and
   * each release of TensorFlow will support a range of GraphDef versions.
   * </pre>
   *
   * <code>.uni_model_proto.VersionDef versions = 4;</code>
   * @return Whether the versions field is set.
   */
  @java.lang.Override
  public boolean hasVersions() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Compatibility versions of the graph.  See core/public/version.h for version
   * history.  The GraphDef version is distinct from the TensorFlow version, and
   * each release of TensorFlow will support a range of GraphDef versions.
   * </pre>
   *
   * <code>.uni_model_proto.VersionDef versions = 4;</code>
   * @return The versions.
   */
  @java.lang.Override
  public graphdef.VersionDef getVersions() {
    return versions_ == null ? graphdef.VersionDef.getDefaultInstance() : versions_;
  }
  /**
   * <pre>
   * Compatibility versions of the graph.  See core/public/version.h for version
   * history.  The GraphDef version is distinct from the TensorFlow version, and
   * each release of TensorFlow will support a range of GraphDef versions.
   * </pre>
   *
   * <code>.uni_model_proto.VersionDef versions = 4;</code>
   */
  @java.lang.Override
  public graphdef.VersionDefOrBuilder getVersionsOrBuilder() {
    return versions_ == null ? graphdef.VersionDef.getDefaultInstance() : versions_;
  }

  public static final int VERSION_FIELD_NUMBER = 3;
  private int version_ = 0;
  /**
   * <pre>
   * Deprecated single version field; use versions above instead.  Since all
   * GraphDef changes before "versions" was introduced were forward
   * compatible, this field is entirely ignored.
   * </pre>
   *
   * <code>int32 version = 3 [deprecated = true];</code>
   * @deprecated uni_model_proto.GraphDef.version is deprecated.
   *     See graphdef/graph.proto;l=47
   * @return The version.
   */
  @java.lang.Override
  @java.lang.Deprecated public int getVersion() {
    return version_;
  }

  public static final int LIBRARY_FIELD_NUMBER = 2;
  private graphdef.FunctionDefLibrary library_;
  /**
   * <pre>
   * "library" provides user-defined functions.
   *
   * Naming:
   *   * library.function.name are in a flat namespace.
   *     NOTE: We may need to change it to be hierarchical to support
   *     different orgs. E.g.,
   *     { "/google/nn", { ... }},
   *     { "/google/vision", { ... }}
   *     { "/org_foo/module_bar", { ... }}
   *     map&lt;string, FunctionDefLib&gt; named_lib;
   *   * If node[i].op is the name of one function in "library",
   *     node[i] is deemed as a function call. Otherwise, node[i].op
   *     must be a primitive operation supported by the runtime.
   *
   *
   * Function call semantics:
   *
   *   * The callee may start execution as soon as some of its inputs
   *     are ready. The caller may want to use Tuple() mechanism to
   *     ensure all inputs are ready in the same time.
   *
   *   * The consumer of return values may start executing as soon as
   *     the return values the consumer depends on are ready.  The
   *     consumer may want to use Tuple() mechanism to ensure the
   *     consumer does not start until all return values of the callee
   *     function are ready.
   * </pre>
   *
   * <code>.uni_model_proto.FunctionDefLibrary library = 2;</code>
   * @return Whether the library field is set.
   */
  @java.lang.Override
  public boolean hasLibrary() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * "library" provides user-defined functions.
   *
   * Naming:
   *   * library.function.name are in a flat namespace.
   *     NOTE: We may need to change it to be hierarchical to support
   *     different orgs. E.g.,
   *     { "/google/nn", { ... }},
   *     { "/google/vision", { ... }}
   *     { "/org_foo/module_bar", { ... }}
   *     map&lt;string, FunctionDefLib&gt; named_lib;
   *   * If node[i].op is the name of one function in "library",
   *     node[i] is deemed as a function call. Otherwise, node[i].op
   *     must be a primitive operation supported by the runtime.
   *
   *
   * Function call semantics:
   *
   *   * The callee may start execution as soon as some of its inputs
   *     are ready. The caller may want to use Tuple() mechanism to
   *     ensure all inputs are ready in the same time.
   *
   *   * The consumer of return values may start executing as soon as
   *     the return values the consumer depends on are ready.  The
   *     consumer may want to use Tuple() mechanism to ensure the
   *     consumer does not start until all return values of the callee
   *     function are ready.
   * </pre>
   *
   * <code>.uni_model_proto.FunctionDefLibrary library = 2;</code>
   * @return The library.
   */
  @java.lang.Override
  public graphdef.FunctionDefLibrary getLibrary() {
    return library_ == null ? graphdef.FunctionDefLibrary.getDefaultInstance() : library_;
  }
  /**
   * <pre>
   * "library" provides user-defined functions.
   *
   * Naming:
   *   * library.function.name are in a flat namespace.
   *     NOTE: We may need to change it to be hierarchical to support
   *     different orgs. E.g.,
   *     { "/google/nn", { ... }},
   *     { "/google/vision", { ... }}
   *     { "/org_foo/module_bar", { ... }}
   *     map&lt;string, FunctionDefLib&gt; named_lib;
   *   * If node[i].op is the name of one function in "library",
   *     node[i] is deemed as a function call. Otherwise, node[i].op
   *     must be a primitive operation supported by the runtime.
   *
   *
   * Function call semantics:
   *
   *   * The callee may start execution as soon as some of its inputs
   *     are ready. The caller may want to use Tuple() mechanism to
   *     ensure all inputs are ready in the same time.
   *
   *   * The consumer of return values may start executing as soon as
   *     the return values the consumer depends on are ready.  The
   *     consumer may want to use Tuple() mechanism to ensure the
   *     consumer does not start until all return values of the callee
   *     function are ready.
   * </pre>
   *
   * <code>.uni_model_proto.FunctionDefLibrary library = 2;</code>
   */
  @java.lang.Override
  public graphdef.FunctionDefLibraryOrBuilder getLibraryOrBuilder() {
    return library_ == null ? graphdef.FunctionDefLibrary.getDefaultInstance() : library_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < node_.size(); i++) {
      output.writeMessage(1, node_.get(i));
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getLibrary());
    }
    if (version_ != 0) {
      output.writeInt32(3, version_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(4, getVersions());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < node_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, node_.get(i));
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getLibrary());
    }
    if (version_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, version_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getVersions());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof graphdef.GraphDef)) {
      return super.equals(obj);
    }
    graphdef.GraphDef other = (graphdef.GraphDef) obj;

    if (!getNodeList()
        .equals(other.getNodeList())) return false;
    if (hasVersions() != other.hasVersions()) return false;
    if (hasVersions()) {
      if (!getVersions()
          .equals(other.getVersions())) return false;
    }
    if (getVersion()
        != other.getVersion()) return false;
    if (hasLibrary() != other.hasLibrary()) return false;
    if (hasLibrary()) {
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getNodeCount() > 0) {
      hash = (37 * hash) + NODE_FIELD_NUMBER;
      hash = (53 * hash) + getNodeList().hashCode();
    }
    if (hasVersions()) {
      hash = (37 * hash) + VERSIONS_FIELD_NUMBER;
      hash = (53 * hash) + getVersions().hashCode();
    }
    hash = (37 * hash) + VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getVersion();
    if (hasLibrary()) {
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static graphdef.GraphDef parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static graphdef.GraphDef parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static graphdef.GraphDef parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static graphdef.GraphDef parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static graphdef.GraphDef parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static graphdef.GraphDef parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static graphdef.GraphDef parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static graphdef.GraphDef parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static graphdef.GraphDef parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static graphdef.GraphDef parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static graphdef.GraphDef parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static graphdef.GraphDef parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(graphdef.GraphDef prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents the graph of operations
   * </pre>
   *
   * Protobuf type {@code uni_model_proto.GraphDef}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:uni_model_proto.GraphDef)
      graphdef.GraphDefOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return graphdef.GraphProtos.internal_static_uni_model_proto_GraphDef_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return graphdef.GraphProtos.internal_static_uni_model_proto_GraphDef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              graphdef.GraphDef.class, graphdef.GraphDef.Builder.class);
    }

    // Construct using graphdef.GraphDef.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getNodeFieldBuilder();
        getVersionsFieldBuilder();
        getLibraryFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (nodeBuilder_ == null) {
        node_ = java.util.Collections.emptyList();
      } else {
        node_ = null;
        nodeBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      versions_ = null;
      if (versionsBuilder_ != null) {
        versionsBuilder_.dispose();
        versionsBuilder_ = null;
      }
      version_ = 0;
      library_ = null;
      if (libraryBuilder_ != null) {
        libraryBuilder_.dispose();
        libraryBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return graphdef.GraphProtos.internal_static_uni_model_proto_GraphDef_descriptor;
    }

    @java.lang.Override
    public graphdef.GraphDef getDefaultInstanceForType() {
      return graphdef.GraphDef.getDefaultInstance();
    }

    @java.lang.Override
    public graphdef.GraphDef build() {
      graphdef.GraphDef result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public graphdef.GraphDef buildPartial() {
      graphdef.GraphDef result = new graphdef.GraphDef(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(graphdef.GraphDef result) {
      if (nodeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          node_ = java.util.Collections.unmodifiableList(node_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.node_ = node_;
      } else {
        result.node_ = nodeBuilder_.build();
      }
    }

    private void buildPartial0(graphdef.GraphDef result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.versions_ = versionsBuilder_ == null
            ? versions_
            : versionsBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.version_ = version_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.library_ = libraryBuilder_ == null
            ? library_
            : libraryBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof graphdef.GraphDef) {
        return mergeFrom((graphdef.GraphDef)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(graphdef.GraphDef other) {
      if (other == graphdef.GraphDef.getDefaultInstance()) return this;
      if (nodeBuilder_ == null) {
        if (!other.node_.isEmpty()) {
          if (node_.isEmpty()) {
            node_ = other.node_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureNodeIsMutable();
            node_.addAll(other.node_);
          }
          onChanged();
        }
      } else {
        if (!other.node_.isEmpty()) {
          if (nodeBuilder_.isEmpty()) {
            nodeBuilder_.dispose();
            nodeBuilder_ = null;
            node_ = other.node_;
            bitField0_ = (bitField0_ & ~0x00000001);
            nodeBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNodeFieldBuilder() : null;
          } else {
            nodeBuilder_.addAllMessages(other.node_);
          }
        }
      }
      if (other.hasVersions()) {
        mergeVersions(other.getVersions());
      }
      if (other.getVersion() != 0) {
        setVersion(other.getVersion());
      }
      if (other.hasLibrary()) {
        mergeLibrary(other.getLibrary());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              graphdef.NodeDef m =
                  input.readMessage(
                      graphdef.NodeDef.parser(),
                      extensionRegistry);
              if (nodeBuilder_ == null) {
                ensureNodeIsMutable();
                node_.add(m);
              } else {
                nodeBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getLibraryFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 18
            case 24: {
              version_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              input.readMessage(
                  getVersionsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<graphdef.NodeDef> node_ =
      java.util.Collections.emptyList();
    private void ensureNodeIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        node_ = new java.util.ArrayList<graphdef.NodeDef>(node_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        graphdef.NodeDef, graphdef.NodeDef.Builder, graphdef.NodeDefOrBuilder> nodeBuilder_;

    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public java.util.List<graphdef.NodeDef> getNodeList() {
      if (nodeBuilder_ == null) {
        return java.util.Collections.unmodifiableList(node_);
      } else {
        return nodeBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public int getNodeCount() {
      if (nodeBuilder_ == null) {
        return node_.size();
      } else {
        return nodeBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public graphdef.NodeDef getNode(int index) {
      if (nodeBuilder_ == null) {
        return node_.get(index);
      } else {
        return nodeBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public Builder setNode(
        int index, graphdef.NodeDef value) {
      if (nodeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeIsMutable();
        node_.set(index, value);
        onChanged();
      } else {
        nodeBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public Builder setNode(
        int index, graphdef.NodeDef.Builder builderForValue) {
      if (nodeBuilder_ == null) {
        ensureNodeIsMutable();
        node_.set(index, builderForValue.build());
        onChanged();
      } else {
        nodeBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public Builder addNode(graphdef.NodeDef value) {
      if (nodeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeIsMutable();
        node_.add(value);
        onChanged();
      } else {
        nodeBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public Builder addNode(
        int index, graphdef.NodeDef value) {
      if (nodeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeIsMutable();
        node_.add(index, value);
        onChanged();
      } else {
        nodeBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public Builder addNode(
        graphdef.NodeDef.Builder builderForValue) {
      if (nodeBuilder_ == null) {
        ensureNodeIsMutable();
        node_.add(builderForValue.build());
        onChanged();
      } else {
        nodeBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public Builder addNode(
        int index, graphdef.NodeDef.Builder builderForValue) {
      if (nodeBuilder_ == null) {
        ensureNodeIsMutable();
        node_.add(index, builderForValue.build());
        onChanged();
      } else {
        nodeBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public Builder addAllNode(
        java.lang.Iterable<? extends graphdef.NodeDef> values) {
      if (nodeBuilder_ == null) {
        ensureNodeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, node_);
        onChanged();
      } else {
        nodeBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public Builder clearNode() {
      if (nodeBuilder_ == null) {
        node_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        nodeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public Builder removeNode(int index) {
      if (nodeBuilder_ == null) {
        ensureNodeIsMutable();
        node_.remove(index);
        onChanged();
      } else {
        nodeBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public graphdef.NodeDef.Builder getNodeBuilder(
        int index) {
      return getNodeFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public graphdef.NodeDefOrBuilder getNodeOrBuilder(
        int index) {
      if (nodeBuilder_ == null) {
        return node_.get(index);  } else {
        return nodeBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public java.util.List<? extends graphdef.NodeDefOrBuilder> 
         getNodeOrBuilderList() {
      if (nodeBuilder_ != null) {
        return nodeBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(node_);
      }
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public graphdef.NodeDef.Builder addNodeBuilder() {
      return getNodeFieldBuilder().addBuilder(
          graphdef.NodeDef.getDefaultInstance());
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public graphdef.NodeDef.Builder addNodeBuilder(
        int index) {
      return getNodeFieldBuilder().addBuilder(
          index, graphdef.NodeDef.getDefaultInstance());
    }
    /**
     * <code>repeated .uni_model_proto.NodeDef node = 1;</code>
     */
    public java.util.List<graphdef.NodeDef.Builder> 
         getNodeBuilderList() {
      return getNodeFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        graphdef.NodeDef, graphdef.NodeDef.Builder, graphdef.NodeDefOrBuilder> 
        getNodeFieldBuilder() {
      if (nodeBuilder_ == null) {
        nodeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            graphdef.NodeDef, graphdef.NodeDef.Builder, graphdef.NodeDefOrBuilder>(
                node_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        node_ = null;
      }
      return nodeBuilder_;
    }

    private graphdef.VersionDef versions_;
    private com.google.protobuf.SingleFieldBuilderV3<
        graphdef.VersionDef, graphdef.VersionDef.Builder, graphdef.VersionDefOrBuilder> versionsBuilder_;
    /**
     * <pre>
     * Compatibility versions of the graph.  See core/public/version.h for version
     * history.  The GraphDef version is distinct from the TensorFlow version, and
     * each release of TensorFlow will support a range of GraphDef versions.
     * </pre>
     *
     * <code>.uni_model_proto.VersionDef versions = 4;</code>
     * @return Whether the versions field is set.
     */
    public boolean hasVersions() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Compatibility versions of the graph.  See core/public/version.h for version
     * history.  The GraphDef version is distinct from the TensorFlow version, and
     * each release of TensorFlow will support a range of GraphDef versions.
     * </pre>
     *
     * <code>.uni_model_proto.VersionDef versions = 4;</code>
     * @return The versions.
     */
    public graphdef.VersionDef getVersions() {
      if (versionsBuilder_ == null) {
        return versions_ == null ? graphdef.VersionDef.getDefaultInstance() : versions_;
      } else {
        return versionsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Compatibility versions of the graph.  See core/public/version.h for version
     * history.  The GraphDef version is distinct from the TensorFlow version, and
     * each release of TensorFlow will support a range of GraphDef versions.
     * </pre>
     *
     * <code>.uni_model_proto.VersionDef versions = 4;</code>
     */
    public Builder setVersions(graphdef.VersionDef value) {
      if (versionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        versions_ = value;
      } else {
        versionsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Compatibility versions of the graph.  See core/public/version.h for version
     * history.  The GraphDef version is distinct from the TensorFlow version, and
     * each release of TensorFlow will support a range of GraphDef versions.
     * </pre>
     *
     * <code>.uni_model_proto.VersionDef versions = 4;</code>
     */
    public Builder setVersions(
        graphdef.VersionDef.Builder builderForValue) {
      if (versionsBuilder_ == null) {
        versions_ = builderForValue.build();
      } else {
        versionsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Compatibility versions of the graph.  See core/public/version.h for version
     * history.  The GraphDef version is distinct from the TensorFlow version, and
     * each release of TensorFlow will support a range of GraphDef versions.
     * </pre>
     *
     * <code>.uni_model_proto.VersionDef versions = 4;</code>
     */
    public Builder mergeVersions(graphdef.VersionDef value) {
      if (versionsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          versions_ != null &&
          versions_ != graphdef.VersionDef.getDefaultInstance()) {
          getVersionsBuilder().mergeFrom(value);
        } else {
          versions_ = value;
        }
      } else {
        versionsBuilder_.mergeFrom(value);
      }
      if (versions_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Compatibility versions of the graph.  See core/public/version.h for version
     * history.  The GraphDef version is distinct from the TensorFlow version, and
     * each release of TensorFlow will support a range of GraphDef versions.
     * </pre>
     *
     * <code>.uni_model_proto.VersionDef versions = 4;</code>
     */
    public Builder clearVersions() {
      bitField0_ = (bitField0_ & ~0x00000002);
      versions_ = null;
      if (versionsBuilder_ != null) {
        versionsBuilder_.dispose();
        versionsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Compatibility versions of the graph.  See core/public/version.h for version
     * history.  The GraphDef version is distinct from the TensorFlow version, and
     * each release of TensorFlow will support a range of GraphDef versions.
     * </pre>
     *
     * <code>.uni_model_proto.VersionDef versions = 4;</code>
     */
    public graphdef.VersionDef.Builder getVersionsBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getVersionsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Compatibility versions of the graph.  See core/public/version.h for version
     * history.  The GraphDef version is distinct from the TensorFlow version, and
     * each release of TensorFlow will support a range of GraphDef versions.
     * </pre>
     *
     * <code>.uni_model_proto.VersionDef versions = 4;</code>
     */
    public graphdef.VersionDefOrBuilder getVersionsOrBuilder() {
      if (versionsBuilder_ != null) {
        return versionsBuilder_.getMessageOrBuilder();
      } else {
        return versions_ == null ?
            graphdef.VersionDef.getDefaultInstance() : versions_;
      }
    }
    /**
     * <pre>
     * Compatibility versions of the graph.  See core/public/version.h for version
     * history.  The GraphDef version is distinct from the TensorFlow version, and
     * each release of TensorFlow will support a range of GraphDef versions.
     * </pre>
     *
     * <code>.uni_model_proto.VersionDef versions = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        graphdef.VersionDef, graphdef.VersionDef.Builder, graphdef.VersionDefOrBuilder> 
        getVersionsFieldBuilder() {
      if (versionsBuilder_ == null) {
        versionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            graphdef.VersionDef, graphdef.VersionDef.Builder, graphdef.VersionDefOrBuilder>(
                getVersions(),
                getParentForChildren(),
                isClean());
        versions_ = null;
      }
      return versionsBuilder_;
    }

    private int version_ ;
    /**
     * <pre>
     * Deprecated single version field; use versions above instead.  Since all
     * GraphDef changes before "versions" was introduced were forward
     * compatible, this field is entirely ignored.
     * </pre>
     *
     * <code>int32 version = 3 [deprecated = true];</code>
     * @deprecated uni_model_proto.GraphDef.version is deprecated.
     *     See graphdef/graph.proto;l=47
     * @return The version.
     */
    @java.lang.Override
    @java.lang.Deprecated public int getVersion() {
      return version_;
    }
    /**
     * <pre>
     * Deprecated single version field; use versions above instead.  Since all
     * GraphDef changes before "versions" was introduced were forward
     * compatible, this field is entirely ignored.
     * </pre>
     *
     * <code>int32 version = 3 [deprecated = true];</code>
     * @deprecated uni_model_proto.GraphDef.version is deprecated.
     *     See graphdef/graph.proto;l=47
     * @param value The version to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setVersion(int value) {

      version_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Deprecated single version field; use versions above instead.  Since all
     * GraphDef changes before "versions" was introduced were forward
     * compatible, this field is entirely ignored.
     * </pre>
     *
     * <code>int32 version = 3 [deprecated = true];</code>
     * @deprecated uni_model_proto.GraphDef.version is deprecated.
     *     See graphdef/graph.proto;l=47
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000004);
      version_ = 0;
      onChanged();
      return this;
    }

    private graphdef.FunctionDefLibrary library_;
    private com.google.protobuf.SingleFieldBuilderV3<
        graphdef.FunctionDefLibrary, graphdef.FunctionDefLibrary.Builder, graphdef.FunctionDefLibraryOrBuilder> libraryBuilder_;
    /**
     * <pre>
     * "library" provides user-defined functions.
     *
     * Naming:
     *   * library.function.name are in a flat namespace.
     *     NOTE: We may need to change it to be hierarchical to support
     *     different orgs. E.g.,
     *     { "/google/nn", { ... }},
     *     { "/google/vision", { ... }}
     *     { "/org_foo/module_bar", { ... }}
     *     map&lt;string, FunctionDefLib&gt; named_lib;
     *   * If node[i].op is the name of one function in "library",
     *     node[i] is deemed as a function call. Otherwise, node[i].op
     *     must be a primitive operation supported by the runtime.
     *
     *
     * Function call semantics:
     *
     *   * The callee may start execution as soon as some of its inputs
     *     are ready. The caller may want to use Tuple() mechanism to
     *     ensure all inputs are ready in the same time.
     *
     *   * The consumer of return values may start executing as soon as
     *     the return values the consumer depends on are ready.  The
     *     consumer may want to use Tuple() mechanism to ensure the
     *     consumer does not start until all return values of the callee
     *     function are ready.
     * </pre>
     *
     * <code>.uni_model_proto.FunctionDefLibrary library = 2;</code>
     * @return Whether the library field is set.
     */
    public boolean hasLibrary() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * "library" provides user-defined functions.
     *
     * Naming:
     *   * library.function.name are in a flat namespace.
     *     NOTE: We may need to change it to be hierarchical to support
     *     different orgs. E.g.,
     *     { "/google/nn", { ... }},
     *     { "/google/vision", { ... }}
     *     { "/org_foo/module_bar", { ... }}
     *     map&lt;string, FunctionDefLib&gt; named_lib;
     *   * If node[i].op is the name of one function in "library",
     *     node[i] is deemed as a function call. Otherwise, node[i].op
     *     must be a primitive operation supported by the runtime.
     *
     *
     * Function call semantics:
     *
     *   * The callee may start execution as soon as some of its inputs
     *     are ready. The caller may want to use Tuple() mechanism to
     *     ensure all inputs are ready in the same time.
     *
     *   * The consumer of return values may start executing as soon as
     *     the return values the consumer depends on are ready.  The
     *     consumer may want to use Tuple() mechanism to ensure the
     *     consumer does not start until all return values of the callee
     *     function are ready.
     * </pre>
     *
     * <code>.uni_model_proto.FunctionDefLibrary library = 2;</code>
     * @return The library.
     */
    public graphdef.FunctionDefLibrary getLibrary() {
      if (libraryBuilder_ == null) {
        return library_ == null ? graphdef.FunctionDefLibrary.getDefaultInstance() : library_;
      } else {
        return libraryBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * "library" provides user-defined functions.
     *
     * Naming:
     *   * library.function.name are in a flat namespace.
     *     NOTE: We may need to change it to be hierarchical to support
     *     different orgs. E.g.,
     *     { "/google/nn", { ... }},
     *     { "/google/vision", { ... }}
     *     { "/org_foo/module_bar", { ... }}
     *     map&lt;string, FunctionDefLib&gt; named_lib;
     *   * If node[i].op is the name of one function in "library",
     *     node[i] is deemed as a function call. Otherwise, node[i].op
     *     must be a primitive operation supported by the runtime.
     *
     *
     * Function call semantics:
     *
     *   * The callee may start execution as soon as some of its inputs
     *     are ready. The caller may want to use Tuple() mechanism to
     *     ensure all inputs are ready in the same time.
     *
     *   * The consumer of return values may start executing as soon as
     *     the return values the consumer depends on are ready.  The
     *     consumer may want to use Tuple() mechanism to ensure the
     *     consumer does not start until all return values of the callee
     *     function are ready.
     * </pre>
     *
     * <code>.uni_model_proto.FunctionDefLibrary library = 2;</code>
     */
    public Builder setLibrary(graphdef.FunctionDefLibrary value) {
      if (libraryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        library_ = value;
      } else {
        libraryBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * "library" provides user-defined functions.
     *
     * Naming:
     *   * library.function.name are in a flat namespace.
     *     NOTE: We may need to change it to be hierarchical to support
     *     different orgs. E.g.,
     *     { "/google/nn", { ... }},
     *     { "/google/vision", { ... }}
     *     { "/org_foo/module_bar", { ... }}
     *     map&lt;string, FunctionDefLib&gt; named_lib;
     *   * If node[i].op is the name of one function in "library",
     *     node[i] is deemed as a function call. Otherwise, node[i].op
     *     must be a primitive operation supported by the runtime.
     *
     *
     * Function call semantics:
     *
     *   * The callee may start execution as soon as some of its inputs
     *     are ready. The caller may want to use Tuple() mechanism to
     *     ensure all inputs are ready in the same time.
     *
     *   * The consumer of return values may start executing as soon as
     *     the return values the consumer depends on are ready.  The
     *     consumer may want to use Tuple() mechanism to ensure the
     *     consumer does not start until all return values of the callee
     *     function are ready.
     * </pre>
     *
     * <code>.uni_model_proto.FunctionDefLibrary library = 2;</code>
     */
    public Builder setLibrary(
        graphdef.FunctionDefLibrary.Builder builderForValue) {
      if (libraryBuilder_ == null) {
        library_ = builderForValue.build();
      } else {
        libraryBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * "library" provides user-defined functions.
     *
     * Naming:
     *   * library.function.name are in a flat namespace.
     *     NOTE: We may need to change it to be hierarchical to support
     *     different orgs. E.g.,
     *     { "/google/nn", { ... }},
     *     { "/google/vision", { ... }}
     *     { "/org_foo/module_bar", { ... }}
     *     map&lt;string, FunctionDefLib&gt; named_lib;
     *   * If node[i].op is the name of one function in "library",
     *     node[i] is deemed as a function call. Otherwise, node[i].op
     *     must be a primitive operation supported by the runtime.
     *
     *
     * Function call semantics:
     *
     *   * The callee may start execution as soon as some of its inputs
     *     are ready. The caller may want to use Tuple() mechanism to
     *     ensure all inputs are ready in the same time.
     *
     *   * The consumer of return values may start executing as soon as
     *     the return values the consumer depends on are ready.  The
     *     consumer may want to use Tuple() mechanism to ensure the
     *     consumer does not start until all return values of the callee
     *     function are ready.
     * </pre>
     *
     * <code>.uni_model_proto.FunctionDefLibrary library = 2;</code>
     */
    public Builder mergeLibrary(graphdef.FunctionDefLibrary value) {
      if (libraryBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          library_ != null &&
          library_ != graphdef.FunctionDefLibrary.getDefaultInstance()) {
          getLibraryBuilder().mergeFrom(value);
        } else {
          library_ = value;
        }
      } else {
        libraryBuilder_.mergeFrom(value);
      }
      if (library_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * "library" provides user-defined functions.
     *
     * Naming:
     *   * library.function.name are in a flat namespace.
     *     NOTE: We may need to change it to be hierarchical to support
     *     different orgs. E.g.,
     *     { "/google/nn", { ... }},
     *     { "/google/vision", { ... }}
     *     { "/org_foo/module_bar", { ... }}
     *     map&lt;string, FunctionDefLib&gt; named_lib;
     *   * If node[i].op is the name of one function in "library",
     *     node[i] is deemed as a function call. Otherwise, node[i].op
     *     must be a primitive operation supported by the runtime.
     *
     *
     * Function call semantics:
     *
     *   * The callee may start execution as soon as some of its inputs
     *     are ready. The caller may want to use Tuple() mechanism to
     *     ensure all inputs are ready in the same time.
     *
     *   * The consumer of return values may start executing as soon as
     *     the return values the consumer depends on are ready.  The
     *     consumer may want to use Tuple() mechanism to ensure the
     *     consumer does not start until all return values of the callee
     *     function are ready.
     * </pre>
     *
     * <code>.uni_model_proto.FunctionDefLibrary library = 2;</code>
     */
    public Builder clearLibrary() {
      bitField0_ = (bitField0_ & ~0x00000008);
      library_ = null;
      if (libraryBuilder_ != null) {
        libraryBuilder_.dispose();
        libraryBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * "library" provides user-defined functions.
     *
     * Naming:
     *   * library.function.name are in a flat namespace.
     *     NOTE: We may need to change it to be hierarchical to support
     *     different orgs. E.g.,
     *     { "/google/nn", { ... }},
     *     { "/google/vision", { ... }}
     *     { "/org_foo/module_bar", { ... }}
     *     map&lt;string, FunctionDefLib&gt; named_lib;
     *   * If node[i].op is the name of one function in "library",
     *     node[i] is deemed as a function call. Otherwise, node[i].op
     *     must be a primitive operation supported by the runtime.
     *
     *
     * Function call semantics:
     *
     *   * The callee may start execution as soon as some of its inputs
     *     are ready. The caller may want to use Tuple() mechanism to
     *     ensure all inputs are ready in the same time.
     *
     *   * The consumer of return values may start executing as soon as
     *     the return values the consumer depends on are ready.  The
     *     consumer may want to use Tuple() mechanism to ensure the
     *     consumer does not start until all return values of the callee
     *     function are ready.
     * </pre>
     *
     * <code>.uni_model_proto.FunctionDefLibrary library = 2;</code>
     */
    public graphdef.FunctionDefLibrary.Builder getLibraryBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getLibraryFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * "library" provides user-defined functions.
     *
     * Naming:
     *   * library.function.name are in a flat namespace.
     *     NOTE: We may need to change it to be hierarchical to support
     *     different orgs. E.g.,
     *     { "/google/nn", { ... }},
     *     { "/google/vision", { ... }}
     *     { "/org_foo/module_bar", { ... }}
     *     map&lt;string, FunctionDefLib&gt; named_lib;
     *   * If node[i].op is the name of one function in "library",
     *     node[i] is deemed as a function call. Otherwise, node[i].op
     *     must be a primitive operation supported by the runtime.
     *
     *
     * Function call semantics:
     *
     *   * The callee may start execution as soon as some of its inputs
     *     are ready. The caller may want to use Tuple() mechanism to
     *     ensure all inputs are ready in the same time.
     *
     *   * The consumer of return values may start executing as soon as
     *     the return values the consumer depends on are ready.  The
     *     consumer may want to use Tuple() mechanism to ensure the
     *     consumer does not start until all return values of the callee
     *     function are ready.
     * </pre>
     *
     * <code>.uni_model_proto.FunctionDefLibrary library = 2;</code>
     */
    public graphdef.FunctionDefLibraryOrBuilder getLibraryOrBuilder() {
      if (libraryBuilder_ != null) {
        return libraryBuilder_.getMessageOrBuilder();
      } else {
        return library_ == null ?
            graphdef.FunctionDefLibrary.getDefaultInstance() : library_;
      }
    }
    /**
     * <pre>
     * "library" provides user-defined functions.
     *
     * Naming:
     *   * library.function.name are in a flat namespace.
     *     NOTE: We may need to change it to be hierarchical to support
     *     different orgs. E.g.,
     *     { "/google/nn", { ... }},
     *     { "/google/vision", { ... }}
     *     { "/org_foo/module_bar", { ... }}
     *     map&lt;string, FunctionDefLib&gt; named_lib;
     *   * If node[i].op is the name of one function in "library",
     *     node[i] is deemed as a function call. Otherwise, node[i].op
     *     must be a primitive operation supported by the runtime.
     *
     *
     * Function call semantics:
     *
     *   * The callee may start execution as soon as some of its inputs
     *     are ready. The caller may want to use Tuple() mechanism to
     *     ensure all inputs are ready in the same time.
     *
     *   * The consumer of return values may start executing as soon as
     *     the return values the consumer depends on are ready.  The
     *     consumer may want to use Tuple() mechanism to ensure the
     *     consumer does not start until all return values of the callee
     *     function are ready.
     * </pre>
     *
     * <code>.uni_model_proto.FunctionDefLibrary library = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        graphdef.FunctionDefLibrary, graphdef.FunctionDefLibrary.Builder, graphdef.FunctionDefLibraryOrBuilder> 
        getLibraryFieldBuilder() {
      if (libraryBuilder_ == null) {
        libraryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            graphdef.FunctionDefLibrary, graphdef.FunctionDefLibrary.Builder, graphdef.FunctionDefLibraryOrBuilder>(
                getLibrary(),
                getParentForChildren(),
                isClean());
        library_ = null;
      }
      return libraryBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:uni_model_proto.GraphDef)
  }

  // @@protoc_insertion_point(class_scope:uni_model_proto.GraphDef)
  private static final graphdef.GraphDef DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new graphdef.GraphDef();
  }

  public static graphdef.GraphDef getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GraphDef>
      PARSER = new com.google.protobuf.AbstractParser<GraphDef>() {
    @java.lang.Override
    public GraphDef parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GraphDef> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GraphDef> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public graphdef.GraphDef getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

