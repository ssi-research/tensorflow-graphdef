// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: graphdef/function.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package graphdef;

@kotlin.jvm.JvmName("-initializefunctionDef")
public inline fun functionDef(block: graphdef.FunctionDefKt.Dsl.() -> kotlin.Unit): graphdef.FunctionDef =
  graphdef.FunctionDefKt.Dsl._create(graphdef.FunctionDef.newBuilder()).apply { block() }._build()
/**
 * ```
 * A function can be instantiated when the runtime can bind every attr
 * with a value. When a GraphDef has a call to a function, it must
 * have binding for every attr defined in the signature.
 *
 * TODO(zhifengc):
 *   * device spec, etc.
 * ```
 *
 * Protobuf type `uni_model_proto.FunctionDef`
 */
public object FunctionDefKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: graphdef.FunctionDef.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: graphdef.FunctionDef.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): graphdef.FunctionDef = _builder.build()

    /**
     * ```
     * The definition of the function's name, arguments, return values,
     * attrs etc.
     * ```
     *
     * `.uni_model_proto.OpDef signature = 1;`
     */
    public var signature: graphdef.OpDef
      @JvmName("getSignature")
      get() = _builder.getSignature()
      @JvmName("setSignature")
      set(value) {
        _builder.setSignature(value)
      }
    /**
     * ```
     * The definition of the function's name, arguments, return values,
     * attrs etc.
     * ```
     *
     * `.uni_model_proto.OpDef signature = 1;`
     */
    public fun clearSignature() {
      _builder.clearSignature()
    }
    /**
     * ```
     * The definition of the function's name, arguments, return values,
     * attrs etc.
     * ```
     *
     * `.uni_model_proto.OpDef signature = 1;`
     * @return Whether the signature field is set.
     */
    public fun hasSignature(): kotlin.Boolean {
      return _builder.hasSignature()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class AttrProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Attributes specific to this function definition.
     * ```
     *
     * `map<string, .uni_model_proto.AttrValue> attr = 5;`
     */
     public val attr: com.google.protobuf.kotlin.DslMap<kotlin.String, graphdef.AttrValue, AttrProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getAttrMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getAttrMap()
      )
    /**
     * ```
     * Attributes specific to this function definition.
     * ```
     *
     * `map<string, .uni_model_proto.AttrValue> attr = 5;`
     */
    @JvmName("putAttr")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, graphdef.AttrValue, AttrProxy>
      .put(key: kotlin.String, value: graphdef.AttrValue) {
         _builder.putAttr(key, value)
       }
    /**
     * ```
     * Attributes specific to this function definition.
     * ```
     *
     * `map<string, .uni_model_proto.AttrValue> attr = 5;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setAttr")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, graphdef.AttrValue, AttrProxy>
      .set(key: kotlin.String, value: graphdef.AttrValue) {
         put(key, value)
       }
    /**
     * ```
     * Attributes specific to this function definition.
     * ```
     *
     * `map<string, .uni_model_proto.AttrValue> attr = 5;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeAttr")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, graphdef.AttrValue, AttrProxy>
      .remove(key: kotlin.String) {
         _builder.removeAttr(key)
       }
    /**
     * ```
     * Attributes specific to this function definition.
     * ```
     *
     * `map<string, .uni_model_proto.AttrValue> attr = 5;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllAttr")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, graphdef.AttrValue, AttrProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, graphdef.AttrValue>) {
         _builder.putAllAttr(map)
       }
    /**
     * ```
     * Attributes specific to this function definition.
     * ```
     *
     * `map<string, .uni_model_proto.AttrValue> attr = 5;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearAttr")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, graphdef.AttrValue, AttrProxy>
      .clear() {
         _builder.clearAttr()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ArgAttrProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `map<uint32, .uni_model_proto.FunctionDef.ArgAttrs> arg_attr = 7;`
     */
     public val argAttr: com.google.protobuf.kotlin.DslMap<kotlin.Int, graphdef.FunctionDef.ArgAttrs, ArgAttrProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getArgAttrMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getArgAttrMap()
      )
    /**
     * `map<uint32, .uni_model_proto.FunctionDef.ArgAttrs> arg_attr = 7;`
     */
    @JvmName("putArgAttr")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, graphdef.FunctionDef.ArgAttrs, ArgAttrProxy>
      .put(key: kotlin.Int, value: graphdef.FunctionDef.ArgAttrs) {
         _builder.putArgAttr(key, value)
       }
    /**
     * `map<uint32, .uni_model_proto.FunctionDef.ArgAttrs> arg_attr = 7;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setArgAttr")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.Int, graphdef.FunctionDef.ArgAttrs, ArgAttrProxy>
      .set(key: kotlin.Int, value: graphdef.FunctionDef.ArgAttrs) {
         put(key, value)
       }
    /**
     * `map<uint32, .uni_model_proto.FunctionDef.ArgAttrs> arg_attr = 7;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeArgAttr")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, graphdef.FunctionDef.ArgAttrs, ArgAttrProxy>
      .remove(key: kotlin.Int) {
         _builder.removeArgAttr(key)
       }
    /**
     * `map<uint32, .uni_model_proto.FunctionDef.ArgAttrs> arg_attr = 7;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllArgAttr")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, graphdef.FunctionDef.ArgAttrs, ArgAttrProxy>
      .putAll(map: kotlin.collections.Map<kotlin.Int, graphdef.FunctionDef.ArgAttrs>) {
         _builder.putAllArgAttr(map)
       }
    /**
     * `map<uint32, .uni_model_proto.FunctionDef.ArgAttrs> arg_attr = 7;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearArgAttr")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, graphdef.FunctionDef.ArgAttrs, ArgAttrProxy>
      .clear() {
         _builder.clearArgAttr()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ResourceArgUniqueIdProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Unique IDs for each resource argument, used to track aliasing resources. If
     * Argument A and Argument B alias each other, then
     * resource_arg_unique_ids[A.index] == resource_arg_unique_ids[B.index].
     *
     * If this field is empty, none of the arguments could alias; otherwise, every
     * resource argument should have an entry in this field.
     *
     * When instantiated, the unique IDs will be attached to the _Arg nodes'
     * "_resource_arg_unique_id" attribute.
     * ```
     *
     * `map<uint32, uint32> resource_arg_unique_id = 8;`
     */
     public val resourceArgUniqueId: com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.Int, ResourceArgUniqueIdProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getResourceArgUniqueIdMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getResourceArgUniqueIdMap()
      )
    /**
     * ```
     * Unique IDs for each resource argument, used to track aliasing resources. If
     * Argument A and Argument B alias each other, then
     * resource_arg_unique_ids[A.index] == resource_arg_unique_ids[B.index].
     *
     * If this field is empty, none of the arguments could alias; otherwise, every
     * resource argument should have an entry in this field.
     *
     * When instantiated, the unique IDs will be attached to the _Arg nodes'
     * "_resource_arg_unique_id" attribute.
     * ```
     *
     * `map<uint32, uint32> resource_arg_unique_id = 8;`
     */
    @JvmName("putResourceArgUniqueId")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.Int, ResourceArgUniqueIdProxy>
      .put(key: kotlin.Int, value: kotlin.Int) {
         _builder.putResourceArgUniqueId(key, value)
       }
    /**
     * ```
     * Unique IDs for each resource argument, used to track aliasing resources. If
     * Argument A and Argument B alias each other, then
     * resource_arg_unique_ids[A.index] == resource_arg_unique_ids[B.index].
     *
     * If this field is empty, none of the arguments could alias; otherwise, every
     * resource argument should have an entry in this field.
     *
     * When instantiated, the unique IDs will be attached to the _Arg nodes'
     * "_resource_arg_unique_id" attribute.
     * ```
     *
     * `map<uint32, uint32> resource_arg_unique_id = 8;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setResourceArgUniqueId")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.Int, ResourceArgUniqueIdProxy>
      .set(key: kotlin.Int, value: kotlin.Int) {
         put(key, value)
       }
    /**
     * ```
     * Unique IDs for each resource argument, used to track aliasing resources. If
     * Argument A and Argument B alias each other, then
     * resource_arg_unique_ids[A.index] == resource_arg_unique_ids[B.index].
     *
     * If this field is empty, none of the arguments could alias; otherwise, every
     * resource argument should have an entry in this field.
     *
     * When instantiated, the unique IDs will be attached to the _Arg nodes'
     * "_resource_arg_unique_id" attribute.
     * ```
     *
     * `map<uint32, uint32> resource_arg_unique_id = 8;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeResourceArgUniqueId")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.Int, ResourceArgUniqueIdProxy>
      .remove(key: kotlin.Int) {
         _builder.removeResourceArgUniqueId(key)
       }
    /**
     * ```
     * Unique IDs for each resource argument, used to track aliasing resources. If
     * Argument A and Argument B alias each other, then
     * resource_arg_unique_ids[A.index] == resource_arg_unique_ids[B.index].
     *
     * If this field is empty, none of the arguments could alias; otherwise, every
     * resource argument should have an entry in this field.
     *
     * When instantiated, the unique IDs will be attached to the _Arg nodes'
     * "_resource_arg_unique_id" attribute.
     * ```
     *
     * `map<uint32, uint32> resource_arg_unique_id = 8;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllResourceArgUniqueId")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.Int, ResourceArgUniqueIdProxy>
      .putAll(map: kotlin.collections.Map<kotlin.Int, kotlin.Int>) {
         _builder.putAllResourceArgUniqueId(map)
       }
    /**
     * ```
     * Unique IDs for each resource argument, used to track aliasing resources. If
     * Argument A and Argument B alias each other, then
     * resource_arg_unique_ids[A.index] == resource_arg_unique_ids[B.index].
     *
     * If this field is empty, none of the arguments could alias; otherwise, every
     * resource argument should have an entry in this field.
     *
     * When instantiated, the unique IDs will be attached to the _Arg nodes'
     * "_resource_arg_unique_id" attribute.
     * ```
     *
     * `map<uint32, uint32> resource_arg_unique_id = 8;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearResourceArgUniqueId")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.Int, ResourceArgUniqueIdProxy>
      .clear() {
         _builder.clearResourceArgUniqueId()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class NodeDefProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * By convention, "op" in node_def is resolved by consulting with a
     * user-defined library first. If not resolved, "func" is assumed to
     * be a builtin op.
     * ```
     *
     * `repeated .uni_model_proto.NodeDef node_def = 3;`
     */
     public val nodeDef: com.google.protobuf.kotlin.DslList<graphdef.NodeDef, NodeDefProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getNodeDefList()
      )
    /**
     * ```
     * By convention, "op" in node_def is resolved by consulting with a
     * user-defined library first. If not resolved, "func" is assumed to
     * be a builtin op.
     * ```
     *
     * `repeated .uni_model_proto.NodeDef node_def = 3;`
     * @param value The nodeDef to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addNodeDef")
    public fun com.google.protobuf.kotlin.DslList<graphdef.NodeDef, NodeDefProxy>.add(value: graphdef.NodeDef) {
      _builder.addNodeDef(value)
    }
    /**
     * ```
     * By convention, "op" in node_def is resolved by consulting with a
     * user-defined library first. If not resolved, "func" is assumed to
     * be a builtin op.
     * ```
     *
     * `repeated .uni_model_proto.NodeDef node_def = 3;`
     * @param value The nodeDef to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignNodeDef")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<graphdef.NodeDef, NodeDefProxy>.plusAssign(value: graphdef.NodeDef) {
      add(value)
    }
    /**
     * ```
     * By convention, "op" in node_def is resolved by consulting with a
     * user-defined library first. If not resolved, "func" is assumed to
     * be a builtin op.
     * ```
     *
     * `repeated .uni_model_proto.NodeDef node_def = 3;`
     * @param values The nodeDef to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllNodeDef")
    public fun com.google.protobuf.kotlin.DslList<graphdef.NodeDef, NodeDefProxy>.addAll(values: kotlin.collections.Iterable<graphdef.NodeDef>) {
      _builder.addAllNodeDef(values)
    }
    /**
     * ```
     * By convention, "op" in node_def is resolved by consulting with a
     * user-defined library first. If not resolved, "func" is assumed to
     * be a builtin op.
     * ```
     *
     * `repeated .uni_model_proto.NodeDef node_def = 3;`
     * @param values The nodeDef to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllNodeDef")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<graphdef.NodeDef, NodeDefProxy>.plusAssign(values: kotlin.collections.Iterable<graphdef.NodeDef>) {
      addAll(values)
    }
    /**
     * ```
     * By convention, "op" in node_def is resolved by consulting with a
     * user-defined library first. If not resolved, "func" is assumed to
     * be a builtin op.
     * ```
     *
     * `repeated .uni_model_proto.NodeDef node_def = 3;`
     * @param index The index to set the value at.
     * @param value The nodeDef to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setNodeDef")
    public operator fun com.google.protobuf.kotlin.DslList<graphdef.NodeDef, NodeDefProxy>.set(index: kotlin.Int, value: graphdef.NodeDef) {
      _builder.setNodeDef(index, value)
    }
    /**
     * ```
     * By convention, "op" in node_def is resolved by consulting with a
     * user-defined library first. If not resolved, "func" is assumed to
     * be a builtin op.
     * ```
     *
     * `repeated .uni_model_proto.NodeDef node_def = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearNodeDef")
    public fun com.google.protobuf.kotlin.DslList<graphdef.NodeDef, NodeDefProxy>.clear() {
      _builder.clearNodeDef()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RetProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * A mapping from the output arg names from `signature` to the
     * outputs from `node_def` that should be returned by the function.
     * ```
     *
     * `map<string, string> ret = 4;`
     */
     public val ret: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, RetProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getRetMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getRetMap()
      )
    /**
     * ```
     * A mapping from the output arg names from `signature` to the
     * outputs from `node_def` that should be returned by the function.
     * ```
     *
     * `map<string, string> ret = 4;`
     */
    @JvmName("putRet")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, RetProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putRet(key, value)
       }
    /**
     * ```
     * A mapping from the output arg names from `signature` to the
     * outputs from `node_def` that should be returned by the function.
     * ```
     *
     * `map<string, string> ret = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setRet")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, RetProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * ```
     * A mapping from the output arg names from `signature` to the
     * outputs from `node_def` that should be returned by the function.
     * ```
     *
     * `map<string, string> ret = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeRet")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, RetProxy>
      .remove(key: kotlin.String) {
         _builder.removeRet(key)
       }
    /**
     * ```
     * A mapping from the output arg names from `signature` to the
     * outputs from `node_def` that should be returned by the function.
     * ```
     *
     * `map<string, string> ret = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllRet")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, RetProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllRet(map)
       }
    /**
     * ```
     * A mapping from the output arg names from `signature` to the
     * outputs from `node_def` that should be returned by the function.
     * ```
     *
     * `map<string, string> ret = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearRet")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, RetProxy>
      .clear() {
         _builder.clearRet()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ControlRetProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * A mapping from control output names from `signature` to node names in
     * `node_def` which should be control outputs of this function.
     * ```
     *
     * `map<string, string> control_ret = 6;`
     */
     public val controlRet: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ControlRetProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getControlRetMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getControlRetMap()
      )
    /**
     * ```
     * A mapping from control output names from `signature` to node names in
     * `node_def` which should be control outputs of this function.
     * ```
     *
     * `map<string, string> control_ret = 6;`
     */
    @JvmName("putControlRet")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ControlRetProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putControlRet(key, value)
       }
    /**
     * ```
     * A mapping from control output names from `signature` to node names in
     * `node_def` which should be control outputs of this function.
     * ```
     *
     * `map<string, string> control_ret = 6;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setControlRet")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ControlRetProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * ```
     * A mapping from control output names from `signature` to node names in
     * `node_def` which should be control outputs of this function.
     * ```
     *
     * `map<string, string> control_ret = 6;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeControlRet")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ControlRetProxy>
      .remove(key: kotlin.String) {
         _builder.removeControlRet(key)
       }
    /**
     * ```
     * A mapping from control output names from `signature` to node names in
     * `node_def` which should be control outputs of this function.
     * ```
     *
     * `map<string, string> control_ret = 6;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllControlRet")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ControlRetProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllControlRet(map)
       }
    /**
     * ```
     * A mapping from control output names from `signature` to node names in
     * `node_def` which should be control outputs of this function.
     * ```
     *
     * `map<string, string> control_ret = 6;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearControlRet")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ControlRetProxy>
      .clear() {
         _builder.clearControlRet()
       }
  }
  @kotlin.jvm.JvmName("-initializeargAttrs")
  public inline fun argAttrs(block: graphdef.FunctionDefKt.ArgAttrsKt.Dsl.() -> kotlin.Unit): graphdef.FunctionDef.ArgAttrs =
    graphdef.FunctionDefKt.ArgAttrsKt.Dsl._create(graphdef.FunctionDef.ArgAttrs.newBuilder()).apply { block() }._build()
  /**
   * ```
   * Attributes for function arguments. These attributes are the same set of
   * valid attributes as to _Arg nodes.
   * ```
   *
   * Protobuf type `uni_model_proto.FunctionDef.ArgAttrs`
   */
  public object ArgAttrsKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: graphdef.FunctionDef.ArgAttrs.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: graphdef.FunctionDef.ArgAttrs.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): graphdef.FunctionDef.ArgAttrs = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class AttrProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * `map<string, .uni_model_proto.AttrValue> attr = 1;`
       */
       public val attr: com.google.protobuf.kotlin.DslMap<kotlin.String, graphdef.AttrValue, AttrProxy>
        @kotlin.jvm.JvmSynthetic
        @JvmName("getAttrMap")
        get() = com.google.protobuf.kotlin.DslMap(
          _builder.getAttrMap()
        )
      /**
       * `map<string, .uni_model_proto.AttrValue> attr = 1;`
       */
      @JvmName("putAttr")
      public fun com.google.protobuf.kotlin.DslMap<kotlin.String, graphdef.AttrValue, AttrProxy>
        .put(key: kotlin.String, value: graphdef.AttrValue) {
           _builder.putAttr(key, value)
         }
      /**
       * `map<string, .uni_model_proto.AttrValue> attr = 1;`
       */
      @kotlin.jvm.JvmSynthetic
      @JvmName("setAttr")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, graphdef.AttrValue, AttrProxy>
        .set(key: kotlin.String, value: graphdef.AttrValue) {
           put(key, value)
         }
      /**
       * `map<string, .uni_model_proto.AttrValue> attr = 1;`
       */
      @kotlin.jvm.JvmSynthetic
      @JvmName("removeAttr")
      public fun com.google.protobuf.kotlin.DslMap<kotlin.String, graphdef.AttrValue, AttrProxy>
        .remove(key: kotlin.String) {
           _builder.removeAttr(key)
         }
      /**
       * `map<string, .uni_model_proto.AttrValue> attr = 1;`
       */
      @kotlin.jvm.JvmSynthetic
      @JvmName("putAllAttr")
      public fun com.google.protobuf.kotlin.DslMap<kotlin.String, graphdef.AttrValue, AttrProxy>
        .putAll(map: kotlin.collections.Map<kotlin.String, graphdef.AttrValue>) {
           _builder.putAllAttr(map)
         }
      /**
       * `map<string, .uni_model_proto.AttrValue> attr = 1;`
       */
      @kotlin.jvm.JvmSynthetic
      @JvmName("clearAttr")
      public fun com.google.protobuf.kotlin.DslMap<kotlin.String, graphdef.AttrValue, AttrProxy>
        .clear() {
           _builder.clearAttr()
         }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun graphdef.FunctionDef.copy(block: `graphdef`.FunctionDefKt.Dsl.() -> kotlin.Unit): graphdef.FunctionDef =
  `graphdef`.FunctionDefKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun graphdef.FunctionDef.ArgAttrs.copy(block: `graphdef`.FunctionDefKt.ArgAttrsKt.Dsl.() -> kotlin.Unit): graphdef.FunctionDef.ArgAttrs =
  `graphdef`.FunctionDefKt.ArgAttrsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val graphdef.FunctionDefOrBuilder.signatureOrNull: graphdef.OpDef?
  get() = if (hasSignature()) getSignature() else null

