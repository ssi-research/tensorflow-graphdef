//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: graphdef/op_def.proto

package graphdef;

@kotlin.jvm.JvmName("-initializeopDeprecation")
public inline fun opDeprecation(block: graphdef.OpDeprecationKt.Dsl.() -> kotlin.Unit): graphdef.OpDeprecation =
  graphdef.OpDeprecationKt.Dsl._create(graphdef.OpDeprecation.newBuilder()).apply { block() }._build()
public object OpDeprecationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: graphdef.OpDeprecation.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: graphdef.OpDeprecation.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): graphdef.OpDeprecation = _builder.build()

    /**
     * <pre>
     * First GraphDef version at which the op is disallowed.
     * </pre>
     *
     * <code>int32 version = 1;</code>
     */
    public var version: kotlin.Int
      @JvmName("getVersion")
      get() = _builder.getVersion()
      @JvmName("setVersion")
      set(value) {
        _builder.setVersion(value)
      }
    /**
     * <pre>
     * First GraphDef version at which the op is disallowed.
     * </pre>
     *
     * <code>int32 version = 1;</code>
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * <pre>
     * Explanation of why it was deprecated and what to use instead.
     * </pre>
     *
     * <code>string explanation = 2;</code>
     */
    public var explanation: kotlin.String
      @JvmName("getExplanation")
      get() = _builder.getExplanation()
      @JvmName("setExplanation")
      set(value) {
        _builder.setExplanation(value)
      }
    /**
     * <pre>
     * Explanation of why it was deprecated and what to use instead.
     * </pre>
     *
     * <code>string explanation = 2;</code>
     */
    public fun clearExplanation() {
      _builder.clearExplanation()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun graphdef.OpDeprecation.copy(block: graphdef.OpDeprecationKt.Dsl.() -> kotlin.Unit): graphdef.OpDeprecation =
  graphdef.OpDeprecationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

