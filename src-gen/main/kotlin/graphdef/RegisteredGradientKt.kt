// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: graphdef/function.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package graphdef;

@kotlin.jvm.JvmName("-initializeregisteredGradient")
public inline fun registeredGradient(block: graphdef.RegisteredGradientKt.Dsl.() -> kotlin.Unit): graphdef.RegisteredGradient =
  graphdef.RegisteredGradientKt.Dsl._create(graphdef.RegisteredGradient.newBuilder()).apply { block() }._build()
/**
 * ```
 * RegisteredGradient stores a gradient function that is registered in the
 * gradients library and used in the ops of a function in the function library.
 * Unlike GradientDef, these gradients are identified by op type, and not
 * directly linked to any function.
 * ```
 *
 * Protobuf type `uni_model_proto.RegisteredGradient`
 */
public object RegisteredGradientKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: graphdef.RegisteredGradient.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: graphdef.RegisteredGradient.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): graphdef.RegisteredGradient = _builder.build()

    /**
     * ```
     * The gradient function's name.
     * ```
     *
     * `string gradient_func = 1;`
     */
    public var gradientFunc: kotlin.String
      @JvmName("getGradientFunc")
      get() = _builder.getGradientFunc()
      @JvmName("setGradientFunc")
      set(value) {
        _builder.setGradientFunc(value)
      }
    /**
     * ```
     * The gradient function's name.
     * ```
     *
     * `string gradient_func = 1;`
     */
    public fun clearGradientFunc() {
      _builder.clearGradientFunc()
    }

    /**
     * ```
     * The gradient function's registered op type.
     * ```
     *
     * `string registered_op_type = 2;`
     */
    public var registeredOpType: kotlin.String
      @JvmName("getRegisteredOpType")
      get() = _builder.getRegisteredOpType()
      @JvmName("setRegisteredOpType")
      set(value) {
        _builder.setRegisteredOpType(value)
      }
    /**
     * ```
     * The gradient function's registered op type.
     * ```
     *
     * `string registered_op_type = 2;`
     */
    public fun clearRegisteredOpType() {
      _builder.clearRegisteredOpType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun graphdef.RegisteredGradient.copy(block: `graphdef`.RegisteredGradientKt.Dsl.() -> kotlin.Unit): graphdef.RegisteredGradient =
  `graphdef`.RegisteredGradientKt.Dsl._create(this.toBuilder()).apply { block() }._build()

