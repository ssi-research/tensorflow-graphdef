// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: graphdef/tensor.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package graphdef;

@kotlin.jvm.JvmName("-initializetensorProto")
public inline fun tensorProto(block: graphdef.TensorProtoKt.Dsl.() -> kotlin.Unit): graphdef.TensorProto =
  graphdef.TensorProtoKt.Dsl._create(graphdef.TensorProto.newBuilder()).apply { block() }._build()
/**
 * ```
 * Protocol buffer representing a tensor.
 * ```
 *
 * Protobuf type `uni_model_proto.TensorProto`
 */
public object TensorProtoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: graphdef.TensorProto.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: graphdef.TensorProto.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): graphdef.TensorProto = _builder.build()

    /**
     * `.uni_model_proto.DataType dtype = 1;`
     */
    public var dtype: graphdef.DataType
      @JvmName("getDtype")
      get() = _builder.getDtype()
      @JvmName("setDtype")
      set(value) {
        _builder.setDtype(value)
      }
    public var dtypeValue: kotlin.Int
      @JvmName("getDtypeValue")
      get() = _builder.getDtypeValue()
      @JvmName("setDtypeValue")
      set(value) {
        _builder.setDtypeValue(value)
      }
    /**
     * `.uni_model_proto.DataType dtype = 1;`
     */
    public fun clearDtype() {
      _builder.clearDtype()
    }

    /**
     * ```
     * Shape of the tensor.  TODO(touts): sort out the 0-rank issues.
     * ```
     *
     * `.uni_model_proto.TensorShapeProto tensor_shape = 2;`
     */
    public var tensorShape: graphdef.TensorShapeProto
      @JvmName("getTensorShape")
      get() = _builder.getTensorShape()
      @JvmName("setTensorShape")
      set(value) {
        _builder.setTensorShape(value)
      }
    /**
     * ```
     * Shape of the tensor.  TODO(touts): sort out the 0-rank issues.
     * ```
     *
     * `.uni_model_proto.TensorShapeProto tensor_shape = 2;`
     */
    public fun clearTensorShape() {
      _builder.clearTensorShape()
    }
    /**
     * ```
     * Shape of the tensor.  TODO(touts): sort out the 0-rank issues.
     * ```
     *
     * `.uni_model_proto.TensorShapeProto tensor_shape = 2;`
     * @return Whether the tensorShape field is set.
     */
    public fun hasTensorShape(): kotlin.Boolean {
      return _builder.hasTensorShape()
    }

    /**
     * ```
     * Version number.
     *
     * In version 0, if the "repeated xxx" representations contain only one
     * element, that element is repeated to fill the shape.  This makes it easy
     * to represent a constant Tensor with a single value.
     * ```
     *
     * `int32 version_number = 3;`
     */
    public var versionNumber: kotlin.Int
      @JvmName("getVersionNumber")
      get() = _builder.getVersionNumber()
      @JvmName("setVersionNumber")
      set(value) {
        _builder.setVersionNumber(value)
      }
    /**
     * ```
     * Version number.
     *
     * In version 0, if the "repeated xxx" representations contain only one
     * element, that element is repeated to fill the shape.  This makes it easy
     * to represent a constant Tensor with a single value.
     * ```
     *
     * `int32 version_number = 3;`
     */
    public fun clearVersionNumber() {
      _builder.clearVersionNumber()
    }

    /**
     * ```
     * Serialized raw tensor content from either Tensor::AsProtoTensorContent or
     * memcpy in tensorflow::grpc::EncodeTensorToByteBuffer. This representation
     * can be used for all tensor types. The purpose of this representation is to
     * reduce serialization overhead during RPC call by avoiding serialization of
     * many repeated small items.
     * ```
     *
     * `bytes tensor_content = 4;`
     */
    public var tensorContent: com.google.protobuf.ByteString
      @JvmName("getTensorContent")
      get() = _builder.getTensorContent()
      @JvmName("setTensorContent")
      set(value) {
        _builder.setTensorContent(value)
      }
    /**
     * ```
     * Serialized raw tensor content from either Tensor::AsProtoTensorContent or
     * memcpy in tensorflow::grpc::EncodeTensorToByteBuffer. This representation
     * can be used for all tensor types. The purpose of this representation is to
     * reduce serialization overhead during RPC call by avoiding serialization of
     * many repeated small items.
     * ```
     *
     * `bytes tensor_content = 4;`
     */
    public fun clearTensorContent() {
      _builder.clearTensorContent()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class HalfValProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * DT_HALF, DT_BFLOAT16. Note that since protobuf has no int16 type, we'll
     * have some pointless zero padding for each value here.
     * ```
     *
     * `repeated int32 half_val = 13 [packed = true];`
     */
     public val halfVal: com.google.protobuf.kotlin.DslList<kotlin.Int, HalfValProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getHalfValList()
      )
    /**
     * ```
     * DT_HALF, DT_BFLOAT16. Note that since protobuf has no int16 type, we'll
     * have some pointless zero padding for each value here.
     * ```
     *
     * `repeated int32 half_val = 13 [packed = true];`
     * @param value The halfVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addHalfVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, HalfValProxy>.add(value: kotlin.Int) {
      _builder.addHalfVal(value)
    }/**
     * ```
     * DT_HALF, DT_BFLOAT16. Note that since protobuf has no int16 type, we'll
     * have some pointless zero padding for each value here.
     * ```
     *
     * `repeated int32 half_val = 13 [packed = true];`
     * @param value The halfVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignHalfVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, HalfValProxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * ```
     * DT_HALF, DT_BFLOAT16. Note that since protobuf has no int16 type, we'll
     * have some pointless zero padding for each value here.
     * ```
     *
     * `repeated int32 half_val = 13 [packed = true];`
     * @param values The halfVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllHalfVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, HalfValProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllHalfVal(values)
    }/**
     * ```
     * DT_HALF, DT_BFLOAT16. Note that since protobuf has no int16 type, we'll
     * have some pointless zero padding for each value here.
     * ```
     *
     * `repeated int32 half_val = 13 [packed = true];`
     * @param values The halfVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllHalfVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, HalfValProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * ```
     * DT_HALF, DT_BFLOAT16. Note that since protobuf has no int16 type, we'll
     * have some pointless zero padding for each value here.
     * ```
     *
     * `repeated int32 half_val = 13 [packed = true];`
     * @param index The index to set the value at.
     * @param value The halfVal to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setHalfVal")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, HalfValProxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setHalfVal(index, value)
    }/**
     * ```
     * DT_HALF, DT_BFLOAT16. Note that since protobuf has no int16 type, we'll
     * have some pointless zero padding for each value here.
     * ```
     *
     * `repeated int32 half_val = 13 [packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearHalfVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, HalfValProxy>.clear() {
      _builder.clearHalfVal()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FloatValProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * DT_FLOAT.
     * ```
     *
     * `repeated float float_val = 5 [packed = true];`
     */
     public val floatVal: com.google.protobuf.kotlin.DslList<kotlin.Float, FloatValProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFloatValList()
      )
    /**
     * ```
     * DT_FLOAT.
     * ```
     *
     * `repeated float float_val = 5 [packed = true];`
     * @param value The floatVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFloatVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, FloatValProxy>.add(value: kotlin.Float) {
      _builder.addFloatVal(value)
    }/**
     * ```
     * DT_FLOAT.
     * ```
     *
     * `repeated float float_val = 5 [packed = true];`
     * @param value The floatVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFloatVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, FloatValProxy>.plusAssign(value: kotlin.Float) {
      add(value)
    }/**
     * ```
     * DT_FLOAT.
     * ```
     *
     * `repeated float float_val = 5 [packed = true];`
     * @param values The floatVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFloatVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, FloatValProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
      _builder.addAllFloatVal(values)
    }/**
     * ```
     * DT_FLOAT.
     * ```
     *
     * `repeated float float_val = 5 [packed = true];`
     * @param values The floatVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFloatVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, FloatValProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
      addAll(values)
    }/**
     * ```
     * DT_FLOAT.
     * ```
     *
     * `repeated float float_val = 5 [packed = true];`
     * @param index The index to set the value at.
     * @param value The floatVal to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFloatVal")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, FloatValProxy>.set(index: kotlin.Int, value: kotlin.Float) {
      _builder.setFloatVal(index, value)
    }/**
     * ```
     * DT_FLOAT.
     * ```
     *
     * `repeated float float_val = 5 [packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFloatVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, FloatValProxy>.clear() {
      _builder.clearFloatVal()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class DoubleValProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * DT_DOUBLE.
     * ```
     *
     * `repeated double double_val = 6 [packed = true];`
     */
     public val doubleVal: com.google.protobuf.kotlin.DslList<kotlin.Double, DoubleValProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getDoubleValList()
      )
    /**
     * ```
     * DT_DOUBLE.
     * ```
     *
     * `repeated double double_val = 6 [packed = true];`
     * @param value The doubleVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addDoubleVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, DoubleValProxy>.add(value: kotlin.Double) {
      _builder.addDoubleVal(value)
    }/**
     * ```
     * DT_DOUBLE.
     * ```
     *
     * `repeated double double_val = 6 [packed = true];`
     * @param value The doubleVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignDoubleVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, DoubleValProxy>.plusAssign(value: kotlin.Double) {
      add(value)
    }/**
     * ```
     * DT_DOUBLE.
     * ```
     *
     * `repeated double double_val = 6 [packed = true];`
     * @param values The doubleVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllDoubleVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, DoubleValProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Double>) {
      _builder.addAllDoubleVal(values)
    }/**
     * ```
     * DT_DOUBLE.
     * ```
     *
     * `repeated double double_val = 6 [packed = true];`
     * @param values The doubleVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllDoubleVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, DoubleValProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Double>) {
      addAll(values)
    }/**
     * ```
     * DT_DOUBLE.
     * ```
     *
     * `repeated double double_val = 6 [packed = true];`
     * @param index The index to set the value at.
     * @param value The doubleVal to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setDoubleVal")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, DoubleValProxy>.set(index: kotlin.Int, value: kotlin.Double) {
      _builder.setDoubleVal(index, value)
    }/**
     * ```
     * DT_DOUBLE.
     * ```
     *
     * `repeated double double_val = 6 [packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearDoubleVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, DoubleValProxy>.clear() {
      _builder.clearDoubleVal()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class IntValProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * DT_INT32, DT_INT16, DT_UINT16, DT_INT8, DT_UINT8.
     * ```
     *
     * `repeated int32 int_val = 7 [packed = true];`
     */
     public val intVal: com.google.protobuf.kotlin.DslList<kotlin.Int, IntValProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getIntValList()
      )
    /**
     * ```
     * DT_INT32, DT_INT16, DT_UINT16, DT_INT8, DT_UINT8.
     * ```
     *
     * `repeated int32 int_val = 7 [packed = true];`
     * @param value The intVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addIntVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntValProxy>.add(value: kotlin.Int) {
      _builder.addIntVal(value)
    }/**
     * ```
     * DT_INT32, DT_INT16, DT_UINT16, DT_INT8, DT_UINT8.
     * ```
     *
     * `repeated int32 int_val = 7 [packed = true];`
     * @param value The intVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignIntVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntValProxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * ```
     * DT_INT32, DT_INT16, DT_UINT16, DT_INT8, DT_UINT8.
     * ```
     *
     * `repeated int32 int_val = 7 [packed = true];`
     * @param values The intVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllIntVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntValProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllIntVal(values)
    }/**
     * ```
     * DT_INT32, DT_INT16, DT_UINT16, DT_INT8, DT_UINT8.
     * ```
     *
     * `repeated int32 int_val = 7 [packed = true];`
     * @param values The intVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllIntVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntValProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * ```
     * DT_INT32, DT_INT16, DT_UINT16, DT_INT8, DT_UINT8.
     * ```
     *
     * `repeated int32 int_val = 7 [packed = true];`
     * @param index The index to set the value at.
     * @param value The intVal to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setIntVal")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntValProxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setIntVal(index, value)
    }/**
     * ```
     * DT_INT32, DT_INT16, DT_UINT16, DT_INT8, DT_UINT8.
     * ```
     *
     * `repeated int32 int_val = 7 [packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearIntVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntValProxy>.clear() {
      _builder.clearIntVal()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class StringValProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * DT_STRING
     * ```
     *
     * `repeated bytes string_val = 8;`
     */
     public val stringVal: com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, StringValProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getStringValList()
      )
    /**
     * ```
     * DT_STRING
     * ```
     *
     * `repeated bytes string_val = 8;`
     * @param value The stringVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addStringVal")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, StringValProxy>.add(value: com.google.protobuf.ByteString) {
      _builder.addStringVal(value)
    }/**
     * ```
     * DT_STRING
     * ```
     *
     * `repeated bytes string_val = 8;`
     * @param value The stringVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignStringVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, StringValProxy>.plusAssign(value: com.google.protobuf.ByteString) {
      add(value)
    }/**
     * ```
     * DT_STRING
     * ```
     *
     * `repeated bytes string_val = 8;`
     * @param values The stringVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllStringVal")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, StringValProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
      _builder.addAllStringVal(values)
    }/**
     * ```
     * DT_STRING
     * ```
     *
     * `repeated bytes string_val = 8;`
     * @param values The stringVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllStringVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, StringValProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
      addAll(values)
    }/**
     * ```
     * DT_STRING
     * ```
     *
     * `repeated bytes string_val = 8;`
     * @param index The index to set the value at.
     * @param value The stringVal to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setStringVal")
    public operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, StringValProxy>.set(index: kotlin.Int, value: com.google.protobuf.ByteString) {
      _builder.setStringVal(index, value)
    }/**
     * ```
     * DT_STRING
     * ```
     *
     * `repeated bytes string_val = 8;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearStringVal")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, StringValProxy>.clear() {
      _builder.clearStringVal()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ScomplexValProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * DT_COMPLEX64. scomplex_val(2*i) and scomplex_val(2*i+1) are real
     * and imaginary parts of i-th single precision complex.
     * ```
     *
     * `repeated float scomplex_val = 9 [packed = true];`
     */
     public val scomplexVal: com.google.protobuf.kotlin.DslList<kotlin.Float, ScomplexValProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getScomplexValList()
      )
    /**
     * ```
     * DT_COMPLEX64. scomplex_val(2*i) and scomplex_val(2*i+1) are real
     * and imaginary parts of i-th single precision complex.
     * ```
     *
     * `repeated float scomplex_val = 9 [packed = true];`
     * @param value The scomplexVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addScomplexVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, ScomplexValProxy>.add(value: kotlin.Float) {
      _builder.addScomplexVal(value)
    }/**
     * ```
     * DT_COMPLEX64. scomplex_val(2*i) and scomplex_val(2*i+1) are real
     * and imaginary parts of i-th single precision complex.
     * ```
     *
     * `repeated float scomplex_val = 9 [packed = true];`
     * @param value The scomplexVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignScomplexVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, ScomplexValProxy>.plusAssign(value: kotlin.Float) {
      add(value)
    }/**
     * ```
     * DT_COMPLEX64. scomplex_val(2*i) and scomplex_val(2*i+1) are real
     * and imaginary parts of i-th single precision complex.
     * ```
     *
     * `repeated float scomplex_val = 9 [packed = true];`
     * @param values The scomplexVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllScomplexVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, ScomplexValProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
      _builder.addAllScomplexVal(values)
    }/**
     * ```
     * DT_COMPLEX64. scomplex_val(2*i) and scomplex_val(2*i+1) are real
     * and imaginary parts of i-th single precision complex.
     * ```
     *
     * `repeated float scomplex_val = 9 [packed = true];`
     * @param values The scomplexVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllScomplexVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, ScomplexValProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
      addAll(values)
    }/**
     * ```
     * DT_COMPLEX64. scomplex_val(2*i) and scomplex_val(2*i+1) are real
     * and imaginary parts of i-th single precision complex.
     * ```
     *
     * `repeated float scomplex_val = 9 [packed = true];`
     * @param index The index to set the value at.
     * @param value The scomplexVal to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setScomplexVal")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, ScomplexValProxy>.set(index: kotlin.Int, value: kotlin.Float) {
      _builder.setScomplexVal(index, value)
    }/**
     * ```
     * DT_COMPLEX64. scomplex_val(2*i) and scomplex_val(2*i+1) are real
     * and imaginary parts of i-th single precision complex.
     * ```
     *
     * `repeated float scomplex_val = 9 [packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearScomplexVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, ScomplexValProxy>.clear() {
      _builder.clearScomplexVal()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class Int64ValProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * DT_INT64
     * ```
     *
     * `repeated int64 int64_val = 10 [packed = true];`
     */
     public val int64Val: com.google.protobuf.kotlin.DslList<kotlin.Long, Int64ValProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getInt64ValList()
      )
    /**
     * ```
     * DT_INT64
     * ```
     *
     * `repeated int64 int64_val = 10 [packed = true];`
     * @param value The int64Val to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addInt64Val")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, Int64ValProxy>.add(value: kotlin.Long) {
      _builder.addInt64Val(value)
    }/**
     * ```
     * DT_INT64
     * ```
     *
     * `repeated int64 int64_val = 10 [packed = true];`
     * @param value The int64Val to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignInt64Val")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, Int64ValProxy>.plusAssign(value: kotlin.Long) {
      add(value)
    }/**
     * ```
     * DT_INT64
     * ```
     *
     * `repeated int64 int64_val = 10 [packed = true];`
     * @param values The int64Val to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllInt64Val")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, Int64ValProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Long>) {
      _builder.addAllInt64Val(values)
    }/**
     * ```
     * DT_INT64
     * ```
     *
     * `repeated int64 int64_val = 10 [packed = true];`
     * @param values The int64Val to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllInt64Val")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, Int64ValProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Long>) {
      addAll(values)
    }/**
     * ```
     * DT_INT64
     * ```
     *
     * `repeated int64 int64_val = 10 [packed = true];`
     * @param index The index to set the value at.
     * @param value The int64Val to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setInt64Val")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, Int64ValProxy>.set(index: kotlin.Int, value: kotlin.Long) {
      _builder.setInt64Val(index, value)
    }/**
     * ```
     * DT_INT64
     * ```
     *
     * `repeated int64 int64_val = 10 [packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearInt64Val")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, Int64ValProxy>.clear() {
      _builder.clearInt64Val()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class BoolValProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * DT_BOOL
     * ```
     *
     * `repeated bool bool_val = 11 [packed = true];`
     */
     public val boolVal: com.google.protobuf.kotlin.DslList<kotlin.Boolean, BoolValProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getBoolValList()
      )
    /**
     * ```
     * DT_BOOL
     * ```
     *
     * `repeated bool bool_val = 11 [packed = true];`
     * @param value The boolVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addBoolVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, BoolValProxy>.add(value: kotlin.Boolean) {
      _builder.addBoolVal(value)
    }/**
     * ```
     * DT_BOOL
     * ```
     *
     * `repeated bool bool_val = 11 [packed = true];`
     * @param value The boolVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignBoolVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, BoolValProxy>.plusAssign(value: kotlin.Boolean) {
      add(value)
    }/**
     * ```
     * DT_BOOL
     * ```
     *
     * `repeated bool bool_val = 11 [packed = true];`
     * @param values The boolVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllBoolVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, BoolValProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Boolean>) {
      _builder.addAllBoolVal(values)
    }/**
     * ```
     * DT_BOOL
     * ```
     *
     * `repeated bool bool_val = 11 [packed = true];`
     * @param values The boolVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllBoolVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, BoolValProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Boolean>) {
      addAll(values)
    }/**
     * ```
     * DT_BOOL
     * ```
     *
     * `repeated bool bool_val = 11 [packed = true];`
     * @param index The index to set the value at.
     * @param value The boolVal to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setBoolVal")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, BoolValProxy>.set(index: kotlin.Int, value: kotlin.Boolean) {
      _builder.setBoolVal(index, value)
    }/**
     * ```
     * DT_BOOL
     * ```
     *
     * `repeated bool bool_val = 11 [packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearBoolVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, BoolValProxy>.clear() {
      _builder.clearBoolVal()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class DcomplexValProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * DT_COMPLEX128. dcomplex_val(2*i) and dcomplex_val(2*i+1) are real
     * and imaginary parts of i-th double precision complex.
     * ```
     *
     * `repeated double dcomplex_val = 12 [packed = true];`
     */
     public val dcomplexVal: com.google.protobuf.kotlin.DslList<kotlin.Double, DcomplexValProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getDcomplexValList()
      )
    /**
     * ```
     * DT_COMPLEX128. dcomplex_val(2*i) and dcomplex_val(2*i+1) are real
     * and imaginary parts of i-th double precision complex.
     * ```
     *
     * `repeated double dcomplex_val = 12 [packed = true];`
     * @param value The dcomplexVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addDcomplexVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, DcomplexValProxy>.add(value: kotlin.Double) {
      _builder.addDcomplexVal(value)
    }/**
     * ```
     * DT_COMPLEX128. dcomplex_val(2*i) and dcomplex_val(2*i+1) are real
     * and imaginary parts of i-th double precision complex.
     * ```
     *
     * `repeated double dcomplex_val = 12 [packed = true];`
     * @param value The dcomplexVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignDcomplexVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, DcomplexValProxy>.plusAssign(value: kotlin.Double) {
      add(value)
    }/**
     * ```
     * DT_COMPLEX128. dcomplex_val(2*i) and dcomplex_val(2*i+1) are real
     * and imaginary parts of i-th double precision complex.
     * ```
     *
     * `repeated double dcomplex_val = 12 [packed = true];`
     * @param values The dcomplexVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllDcomplexVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, DcomplexValProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Double>) {
      _builder.addAllDcomplexVal(values)
    }/**
     * ```
     * DT_COMPLEX128. dcomplex_val(2*i) and dcomplex_val(2*i+1) are real
     * and imaginary parts of i-th double precision complex.
     * ```
     *
     * `repeated double dcomplex_val = 12 [packed = true];`
     * @param values The dcomplexVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllDcomplexVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, DcomplexValProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Double>) {
      addAll(values)
    }/**
     * ```
     * DT_COMPLEX128. dcomplex_val(2*i) and dcomplex_val(2*i+1) are real
     * and imaginary parts of i-th double precision complex.
     * ```
     *
     * `repeated double dcomplex_val = 12 [packed = true];`
     * @param index The index to set the value at.
     * @param value The dcomplexVal to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setDcomplexVal")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, DcomplexValProxy>.set(index: kotlin.Int, value: kotlin.Double) {
      _builder.setDcomplexVal(index, value)
    }/**
     * ```
     * DT_COMPLEX128. dcomplex_val(2*i) and dcomplex_val(2*i+1) are real
     * and imaginary parts of i-th double precision complex.
     * ```
     *
     * `repeated double dcomplex_val = 12 [packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearDcomplexVal")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Double, DcomplexValProxy>.clear() {
      _builder.clearDcomplexVal()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ResourceHandleValProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * DT_RESOURCE
     * ```
     *
     * `repeated .uni_model_proto.ResourceHandleProto resource_handle_val = 14;`
     */
     public val resourceHandleVal: com.google.protobuf.kotlin.DslList<graphdef.ResourceHandleProto, ResourceHandleValProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getResourceHandleValList()
      )
    /**
     * ```
     * DT_RESOURCE
     * ```
     *
     * `repeated .uni_model_proto.ResourceHandleProto resource_handle_val = 14;`
     * @param value The resourceHandleVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addResourceHandleVal")
    public fun com.google.protobuf.kotlin.DslList<graphdef.ResourceHandleProto, ResourceHandleValProxy>.add(value: graphdef.ResourceHandleProto) {
      _builder.addResourceHandleVal(value)
    }
    /**
     * ```
     * DT_RESOURCE
     * ```
     *
     * `repeated .uni_model_proto.ResourceHandleProto resource_handle_val = 14;`
     * @param value The resourceHandleVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignResourceHandleVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<graphdef.ResourceHandleProto, ResourceHandleValProxy>.plusAssign(value: graphdef.ResourceHandleProto) {
      add(value)
    }
    /**
     * ```
     * DT_RESOURCE
     * ```
     *
     * `repeated .uni_model_proto.ResourceHandleProto resource_handle_val = 14;`
     * @param values The resourceHandleVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllResourceHandleVal")
    public fun com.google.protobuf.kotlin.DslList<graphdef.ResourceHandleProto, ResourceHandleValProxy>.addAll(values: kotlin.collections.Iterable<graphdef.ResourceHandleProto>) {
      _builder.addAllResourceHandleVal(values)
    }
    /**
     * ```
     * DT_RESOURCE
     * ```
     *
     * `repeated .uni_model_proto.ResourceHandleProto resource_handle_val = 14;`
     * @param values The resourceHandleVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllResourceHandleVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<graphdef.ResourceHandleProto, ResourceHandleValProxy>.plusAssign(values: kotlin.collections.Iterable<graphdef.ResourceHandleProto>) {
      addAll(values)
    }
    /**
     * ```
     * DT_RESOURCE
     * ```
     *
     * `repeated .uni_model_proto.ResourceHandleProto resource_handle_val = 14;`
     * @param index The index to set the value at.
     * @param value The resourceHandleVal to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setResourceHandleVal")
    public operator fun com.google.protobuf.kotlin.DslList<graphdef.ResourceHandleProto, ResourceHandleValProxy>.set(index: kotlin.Int, value: graphdef.ResourceHandleProto) {
      _builder.setResourceHandleVal(index, value)
    }
    /**
     * ```
     * DT_RESOURCE
     * ```
     *
     * `repeated .uni_model_proto.ResourceHandleProto resource_handle_val = 14;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearResourceHandleVal")
    public fun com.google.protobuf.kotlin.DslList<graphdef.ResourceHandleProto, ResourceHandleValProxy>.clear() {
      _builder.clearResourceHandleVal()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class VariantValProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * DT_VARIANT
     * ```
     *
     * `repeated .uni_model_proto.VariantTensorDataProto variant_val = 15;`
     */
     public val variantVal: com.google.protobuf.kotlin.DslList<graphdef.VariantTensorDataProto, VariantValProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getVariantValList()
      )
    /**
     * ```
     * DT_VARIANT
     * ```
     *
     * `repeated .uni_model_proto.VariantTensorDataProto variant_val = 15;`
     * @param value The variantVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addVariantVal")
    public fun com.google.protobuf.kotlin.DslList<graphdef.VariantTensorDataProto, VariantValProxy>.add(value: graphdef.VariantTensorDataProto) {
      _builder.addVariantVal(value)
    }
    /**
     * ```
     * DT_VARIANT
     * ```
     *
     * `repeated .uni_model_proto.VariantTensorDataProto variant_val = 15;`
     * @param value The variantVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignVariantVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<graphdef.VariantTensorDataProto, VariantValProxy>.plusAssign(value: graphdef.VariantTensorDataProto) {
      add(value)
    }
    /**
     * ```
     * DT_VARIANT
     * ```
     *
     * `repeated .uni_model_proto.VariantTensorDataProto variant_val = 15;`
     * @param values The variantVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllVariantVal")
    public fun com.google.protobuf.kotlin.DslList<graphdef.VariantTensorDataProto, VariantValProxy>.addAll(values: kotlin.collections.Iterable<graphdef.VariantTensorDataProto>) {
      _builder.addAllVariantVal(values)
    }
    /**
     * ```
     * DT_VARIANT
     * ```
     *
     * `repeated .uni_model_proto.VariantTensorDataProto variant_val = 15;`
     * @param values The variantVal to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllVariantVal")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<graphdef.VariantTensorDataProto, VariantValProxy>.plusAssign(values: kotlin.collections.Iterable<graphdef.VariantTensorDataProto>) {
      addAll(values)
    }
    /**
     * ```
     * DT_VARIANT
     * ```
     *
     * `repeated .uni_model_proto.VariantTensorDataProto variant_val = 15;`
     * @param index The index to set the value at.
     * @param value The variantVal to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setVariantVal")
    public operator fun com.google.protobuf.kotlin.DslList<graphdef.VariantTensorDataProto, VariantValProxy>.set(index: kotlin.Int, value: graphdef.VariantTensorDataProto) {
      _builder.setVariantVal(index, value)
    }
    /**
     * ```
     * DT_VARIANT
     * ```
     *
     * `repeated .uni_model_proto.VariantTensorDataProto variant_val = 15;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearVariantVal")
    public fun com.google.protobuf.kotlin.DslList<graphdef.VariantTensorDataProto, VariantValProxy>.clear() {
      _builder.clearVariantVal()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class Uint32ValProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * DT_UINT32
     * ```
     *
     * `repeated uint32 uint32_val = 16 [packed = true];`
     */
     public val uint32Val: com.google.protobuf.kotlin.DslList<kotlin.Int, Uint32ValProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getUint32ValList()
      )
    /**
     * ```
     * DT_UINT32
     * ```
     *
     * `repeated uint32 uint32_val = 16 [packed = true];`
     * @param value The uint32Val to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addUint32Val")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, Uint32ValProxy>.add(value: kotlin.Int) {
      _builder.addUint32Val(value)
    }/**
     * ```
     * DT_UINT32
     * ```
     *
     * `repeated uint32 uint32_val = 16 [packed = true];`
     * @param value The uint32Val to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignUint32Val")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, Uint32ValProxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * ```
     * DT_UINT32
     * ```
     *
     * `repeated uint32 uint32_val = 16 [packed = true];`
     * @param values The uint32Val to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllUint32Val")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, Uint32ValProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllUint32Val(values)
    }/**
     * ```
     * DT_UINT32
     * ```
     *
     * `repeated uint32 uint32_val = 16 [packed = true];`
     * @param values The uint32Val to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllUint32Val")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, Uint32ValProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * ```
     * DT_UINT32
     * ```
     *
     * `repeated uint32 uint32_val = 16 [packed = true];`
     * @param index The index to set the value at.
     * @param value The uint32Val to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setUint32Val")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, Uint32ValProxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setUint32Val(index, value)
    }/**
     * ```
     * DT_UINT32
     * ```
     *
     * `repeated uint32 uint32_val = 16 [packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearUint32Val")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, Uint32ValProxy>.clear() {
      _builder.clearUint32Val()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class Uint64ValProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * DT_UINT64
     * ```
     *
     * `repeated uint64 uint64_val = 17 [packed = true];`
     */
     public val uint64Val: com.google.protobuf.kotlin.DslList<kotlin.Long, Uint64ValProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getUint64ValList()
      )
    /**
     * ```
     * DT_UINT64
     * ```
     *
     * `repeated uint64 uint64_val = 17 [packed = true];`
     * @param value The uint64Val to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addUint64Val")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, Uint64ValProxy>.add(value: kotlin.Long) {
      _builder.addUint64Val(value)
    }/**
     * ```
     * DT_UINT64
     * ```
     *
     * `repeated uint64 uint64_val = 17 [packed = true];`
     * @param value The uint64Val to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignUint64Val")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, Uint64ValProxy>.plusAssign(value: kotlin.Long) {
      add(value)
    }/**
     * ```
     * DT_UINT64
     * ```
     *
     * `repeated uint64 uint64_val = 17 [packed = true];`
     * @param values The uint64Val to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllUint64Val")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, Uint64ValProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Long>) {
      _builder.addAllUint64Val(values)
    }/**
     * ```
     * DT_UINT64
     * ```
     *
     * `repeated uint64 uint64_val = 17 [packed = true];`
     * @param values The uint64Val to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllUint64Val")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, Uint64ValProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Long>) {
      addAll(values)
    }/**
     * ```
     * DT_UINT64
     * ```
     *
     * `repeated uint64 uint64_val = 17 [packed = true];`
     * @param index The index to set the value at.
     * @param value The uint64Val to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setUint64Val")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, Uint64ValProxy>.set(index: kotlin.Int, value: kotlin.Long) {
      _builder.setUint64Val(index, value)
    }/**
     * ```
     * DT_UINT64
     * ```
     *
     * `repeated uint64 uint64_val = 17 [packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearUint64Val")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, Uint64ValProxy>.clear() {
      _builder.clearUint64Val()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun graphdef.TensorProto.copy(block: `graphdef`.TensorProtoKt.Dsl.() -> kotlin.Unit): graphdef.TensorProto =
  `graphdef`.TensorProtoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val graphdef.TensorProtoOrBuilder.tensorShapeOrNull: graphdef.TensorShapeProto?
  get() = if (hasTensorShape()) getTensorShape() else null

