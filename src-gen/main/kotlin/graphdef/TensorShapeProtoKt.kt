//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: graphdef/tensor_shape.proto

package graphdef;

@kotlin.jvm.JvmName("-initializetensorShapeProto")
public inline fun tensorShapeProto(block: graphdef.TensorShapeProtoKt.Dsl.() -> kotlin.Unit): graphdef.TensorShapeProto =
  graphdef.TensorShapeProtoKt.Dsl._create(graphdef.TensorShapeProto.newBuilder()).apply { block() }._build()
public object TensorShapeProtoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: graphdef.TensorShapeProto.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: graphdef.TensorShapeProto.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): graphdef.TensorShapeProto = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class DimProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40}
     * for a 30 x 40 2D tensor.  If an entry has size -1, this
     * corresponds to a dimension of unknown size. The names are
     * optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * If "dim.size()" &gt; 0, "unknown_rank" must be false.
     * </pre>
     *
     * <code>repeated .uni_model_proto.TensorShapeProto.Dim dim = 2;</code>
     */
     public val dim: com.google.protobuf.kotlin.DslList<graphdef.TensorShapeProto.Dim, DimProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getDimList()
      )
    /**
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40}
     * for a 30 x 40 2D tensor.  If an entry has size -1, this
     * corresponds to a dimension of unknown size. The names are
     * optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * If "dim.size()" &gt; 0, "unknown_rank" must be false.
     * </pre>
     *
     * <code>repeated .uni_model_proto.TensorShapeProto.Dim dim = 2;</code>
     * @param value The dim to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addDim")
    public fun com.google.protobuf.kotlin.DslList<graphdef.TensorShapeProto.Dim, DimProxy>.add(value: graphdef.TensorShapeProto.Dim) {
      _builder.addDim(value)
    }
    /**
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40}
     * for a 30 x 40 2D tensor.  If an entry has size -1, this
     * corresponds to a dimension of unknown size. The names are
     * optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * If "dim.size()" &gt; 0, "unknown_rank" must be false.
     * </pre>
     *
     * <code>repeated .uni_model_proto.TensorShapeProto.Dim dim = 2;</code>
     * @param value The dim to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignDim")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<graphdef.TensorShapeProto.Dim, DimProxy>.plusAssign(value: graphdef.TensorShapeProto.Dim) {
      add(value)
    }
    /**
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40}
     * for a 30 x 40 2D tensor.  If an entry has size -1, this
     * corresponds to a dimension of unknown size. The names are
     * optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * If "dim.size()" &gt; 0, "unknown_rank" must be false.
     * </pre>
     *
     * <code>repeated .uni_model_proto.TensorShapeProto.Dim dim = 2;</code>
     * @param values The dim to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllDim")
    public fun com.google.protobuf.kotlin.DslList<graphdef.TensorShapeProto.Dim, DimProxy>.addAll(values: kotlin.collections.Iterable<graphdef.TensorShapeProto.Dim>) {
      _builder.addAllDim(values)
    }
    /**
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40}
     * for a 30 x 40 2D tensor.  If an entry has size -1, this
     * corresponds to a dimension of unknown size. The names are
     * optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * If "dim.size()" &gt; 0, "unknown_rank" must be false.
     * </pre>
     *
     * <code>repeated .uni_model_proto.TensorShapeProto.Dim dim = 2;</code>
     * @param values The dim to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllDim")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<graphdef.TensorShapeProto.Dim, DimProxy>.plusAssign(values: kotlin.collections.Iterable<graphdef.TensorShapeProto.Dim>) {
      addAll(values)
    }
    /**
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40}
     * for a 30 x 40 2D tensor.  If an entry has size -1, this
     * corresponds to a dimension of unknown size. The names are
     * optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * If "dim.size()" &gt; 0, "unknown_rank" must be false.
     * </pre>
     *
     * <code>repeated .uni_model_proto.TensorShapeProto.Dim dim = 2;</code>
     * @param index The index to set the value at.
     * @param value The dim to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setDim")
    public operator fun com.google.protobuf.kotlin.DslList<graphdef.TensorShapeProto.Dim, DimProxy>.set(index: kotlin.Int, value: graphdef.TensorShapeProto.Dim) {
      _builder.setDim(index, value)
    }
    /**
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40}
     * for a 30 x 40 2D tensor.  If an entry has size -1, this
     * corresponds to a dimension of unknown size. The names are
     * optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * If "dim.size()" &gt; 0, "unknown_rank" must be false.
     * </pre>
     *
     * <code>repeated .uni_model_proto.TensorShapeProto.Dim dim = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearDim")
    public fun com.google.protobuf.kotlin.DslList<graphdef.TensorShapeProto.Dim, DimProxy>.clear() {
      _builder.clearDim()
    }


    /**
     * <pre>
     * If true, the number of dimensions in the shape is unknown.
     * If true, "dim.size()" must be 0.
     * </pre>
     *
     * <code>bool unknown_rank = 3;</code>
     */
    public var unknownRank: kotlin.Boolean
      @JvmName("getUnknownRank")
      get() = _builder.getUnknownRank()
      @JvmName("setUnknownRank")
      set(value) {
        _builder.setUnknownRank(value)
      }
    /**
     * <pre>
     * If true, the number of dimensions in the shape is unknown.
     * If true, "dim.size()" must be 0.
     * </pre>
     *
     * <code>bool unknown_rank = 3;</code>
     */
    public fun clearUnknownRank() {
      _builder.clearUnknownRank()
    }
  }
  @kotlin.jvm.JvmName("-initializedim")
  public inline fun dim(block: graphdef.TensorShapeProtoKt.DimKt.Dsl.() -> kotlin.Unit): graphdef.TensorShapeProto.Dim =
    graphdef.TensorShapeProtoKt.DimKt.Dsl._create(graphdef.TensorShapeProto.Dim.newBuilder()).apply { block() }._build()
  public object DimKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: graphdef.TensorShapeProto.Dim.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: graphdef.TensorShapeProto.Dim.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): graphdef.TensorShapeProto.Dim = _builder.build()

      /**
       * <pre>
       * Size of the tensor in that dimension.
       * This value must be &gt;= -1, but values of -1 are reserved for "unknown"
       * shapes (values of -1 mean "unknown" dimension).  Certain wrappers
       * that work with TensorShapeProto may fail at runtime when deserializing
       * a TensorShapeProto containing a dim value of -1.
       * </pre>
       *
       * <code>int64 size = 1;</code>
       */
      public var size: kotlin.Long
        @JvmName("getSize")
        get() = _builder.getSize()
        @JvmName("setSize")
        set(value) {
          _builder.setSize(value)
        }
      /**
       * <pre>
       * Size of the tensor in that dimension.
       * This value must be &gt;= -1, but values of -1 are reserved for "unknown"
       * shapes (values of -1 mean "unknown" dimension).  Certain wrappers
       * that work with TensorShapeProto may fail at runtime when deserializing
       * a TensorShapeProto containing a dim value of -1.
       * </pre>
       *
       * <code>int64 size = 1;</code>
       */
      public fun clearSize() {
        _builder.clearSize()
      }

      /**
       * <pre>
       * Optional name of the tensor dimension.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public var name: kotlin.String
        @JvmName("getName")
        get() = _builder.getName()
        @JvmName("setName")
        set(value) {
          _builder.setName(value)
        }
      /**
       * <pre>
       * Optional name of the tensor dimension.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public fun clearName() {
        _builder.clearName()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun graphdef.TensorShapeProto.copy(block: graphdef.TensorShapeProtoKt.Dsl.() -> kotlin.Unit): graphdef.TensorShapeProto =
  graphdef.TensorShapeProtoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun graphdef.TensorShapeProto.Dim.copy(block: graphdef.TensorShapeProtoKt.DimKt.Dsl.() -> kotlin.Unit): graphdef.TensorShapeProto.Dim =
  graphdef.TensorShapeProtoKt.DimKt.Dsl._create(this.toBuilder()).apply { block() }._build()

