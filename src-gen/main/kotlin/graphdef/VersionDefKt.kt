//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: graphdef/versions.proto

package graphdef;

@kotlin.jvm.JvmName("-initializeversionDef")
public inline fun versionDef(block: graphdef.VersionDefKt.Dsl.() -> kotlin.Unit): graphdef.VersionDef =
  graphdef.VersionDefKt.Dsl._create(graphdef.VersionDef.newBuilder()).apply { block() }._build()
public object VersionDefKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: graphdef.VersionDef.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: graphdef.VersionDef.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): graphdef.VersionDef = _builder.build()

    /**
     * <pre>
     * The version of the code that produced this data.
     * </pre>
     *
     * <code>int32 producer = 1;</code>
     */
    public var producer: kotlin.Int
      @JvmName("getProducer")
      get() = _builder.getProducer()
      @JvmName("setProducer")
      set(value) {
        _builder.setProducer(value)
      }
    /**
     * <pre>
     * The version of the code that produced this data.
     * </pre>
     *
     * <code>int32 producer = 1;</code>
     */
    public fun clearProducer() {
      _builder.clearProducer()
    }

    /**
     * <pre>
     * Any consumer below this version is not allowed to consume this data.
     * </pre>
     *
     * <code>int32 min_consumer = 2;</code>
     */
    public var minConsumer: kotlin.Int
      @JvmName("getMinConsumer")
      get() = _builder.getMinConsumer()
      @JvmName("setMinConsumer")
      set(value) {
        _builder.setMinConsumer(value)
      }
    /**
     * <pre>
     * Any consumer below this version is not allowed to consume this data.
     * </pre>
     *
     * <code>int32 min_consumer = 2;</code>
     */
    public fun clearMinConsumer() {
      _builder.clearMinConsumer()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class BadConsumersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Specific consumer versions which are disallowed (e.g. due to bugs).
     * </pre>
     *
     * <code>repeated int32 bad_consumers = 3;</code>
     */
     public val badConsumers: com.google.protobuf.kotlin.DslList<kotlin.Int, BadConsumersProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getBadConsumersList()
      )
    /**
     * <pre>
     * Specific consumer versions which are disallowed (e.g. due to bugs).
     * </pre>
     *
     * <code>repeated int32 bad_consumers = 3;</code>
     * @param value The badConsumers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addBadConsumers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, BadConsumersProxy>.add(value: kotlin.Int) {
      _builder.addBadConsumers(value)
    }/**
     * <pre>
     * Specific consumer versions which are disallowed (e.g. due to bugs).
     * </pre>
     *
     * <code>repeated int32 bad_consumers = 3;</code>
     * @param value The badConsumers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignBadConsumers")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, BadConsumersProxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * <pre>
     * Specific consumer versions which are disallowed (e.g. due to bugs).
     * </pre>
     *
     * <code>repeated int32 bad_consumers = 3;</code>
     * @param values The badConsumers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllBadConsumers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, BadConsumersProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllBadConsumers(values)
    }/**
     * <pre>
     * Specific consumer versions which are disallowed (e.g. due to bugs).
     * </pre>
     *
     * <code>repeated int32 bad_consumers = 3;</code>
     * @param values The badConsumers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllBadConsumers")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, BadConsumersProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * <pre>
     * Specific consumer versions which are disallowed (e.g. due to bugs).
     * </pre>
     *
     * <code>repeated int32 bad_consumers = 3;</code>
     * @param index The index to set the value at.
     * @param value The badConsumers to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setBadConsumers")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, BadConsumersProxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setBadConsumers(index, value)
    }/**
     * <pre>
     * Specific consumer versions which are disallowed (e.g. due to bugs).
     * </pre>
     *
     * <code>repeated int32 bad_consumers = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearBadConsumers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, BadConsumersProxy>.clear() {
      _builder.clearBadConsumers()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun graphdef.VersionDef.copy(block: graphdef.VersionDefKt.Dsl.() -> kotlin.Unit): graphdef.VersionDef =
  graphdef.VersionDefKt.Dsl._create(this.toBuilder()).apply { block() }._build()

